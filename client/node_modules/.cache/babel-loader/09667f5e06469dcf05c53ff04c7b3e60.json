{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _flatten from \"lodash/flatten\";\nimport _get from \"lodash/get\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { setStatic } from 'recompose';\nimport StepItem from './StepItem';\nimport { prefix, defaultProps, ReactChildren, isIE10 } from '../utils';\n\nvar Steps =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Steps, _React$Component);\n\n  function Steps() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Steps.prototype;\n\n  _proto.render = function render() {\n    var _classNames;\n\n    var _this$props = this.props,\n        classPrefix = _this$props.classPrefix,\n        className = _this$props.className,\n        children = _this$props.children,\n        vertical = _this$props.vertical,\n        small = _this$props.small,\n        current = _this$props.current,\n        currentStatus = _this$props.currentStatus,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"classPrefix\", \"className\", \"children\", \"vertical\", \"small\", \"current\", \"currentStatus\"]);\n\n    var addPrefix = prefix(classPrefix);\n    var horizontal = !vertical;\n    var classes = classNames(classPrefix, className, (_classNames = {}, _classNames[addPrefix('small')] = small, _classNames[addPrefix('vertical')] = vertical, _classNames[addPrefix('horizontal')] = horizontal, _classNames));\n\n    var count = _get(_flatten(children), 'length');\n\n    var items = ReactChildren.mapCloneElement(children, function (item, index) {\n      var _itemStyles;\n\n      var itemStyles = (_itemStyles = {}, _itemStyles[isIE10() ? 'msFlexPreferredSize' : 'flexBasis'] = index < count - 1 ? 100 / (count - 1) + \"%\" : undefined, _itemStyles.maxWidth = index === count - 1 ? 100 / count + \"%\" : undefined, _itemStyles);\n\n      var itemProps = _extends({\n        stepNumber: index + 1,\n        status: 'wait',\n        style: horizontal ? itemStyles : undefined\n      }, item.props); // fix tail color\n\n\n      if (currentStatus === 'error' && index === current - 1) {\n        itemProps.className = addPrefix('next-error');\n      }\n\n      if (!item.props.status) {\n        if (index === current) {\n          itemProps.status = currentStatus;\n        } else if (index < current) {\n          itemProps.status = 'finish';\n        }\n      }\n\n      return itemProps;\n    });\n    return React.createElement(\"div\", _extends({}, rest, {\n      className: classes\n    }), items);\n  };\n\n  return Steps;\n}(React.Component);\n\nSteps.propTypes = {\n  classPrefix: PropTypes.string,\n  vertical: PropTypes.bool,\n  small: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  current: PropTypes.number,\n  currentStatus: PropTypes.oneOf(['finish', 'wait', 'process', 'error'])\n};\nSteps.defaultProps = {\n  currentStatus: 'process',\n  current: 0\n};\nvar EnhancedSteps = defaultProps({\n  classPrefix: 'steps'\n})(Steps);\nsetStatic('Item', StepItem)(EnhancedSteps);\nexport default EnhancedSteps;","map":null,"metadata":{},"sourceType":"module"}