{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _omit from \"lodash/omit\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { prefix, defaultProps } from '../utils';\nimport { overlayProps } from '../Whisper/Whisper';\n\nvar Popover =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Popover, _React$Component);\n\n  function Popover() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Popover.prototype;\n\n  _proto.render = function render() {\n    var _classNames;\n\n    var _this$props = this.props,\n        classPrefix = _this$props.classPrefix,\n        title = _this$props.title,\n        children = _this$props.children,\n        style = _this$props.style,\n        visible = _this$props.visible,\n        className = _this$props.className,\n        full = _this$props.full,\n        htmlElementRef = _this$props.htmlElementRef,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"classPrefix\", \"title\", \"children\", \"style\", \"visible\", \"className\", \"full\", \"htmlElementRef\"]);\n\n    var addPrefix = prefix(classPrefix);\n    var classes = classNames(classPrefix, className, (_classNames = {}, _classNames[addPrefix('full')] = full, _classNames));\n\n    var styles = _extends({\n      display: 'block',\n      opacity: visible ? 1 : undefined\n    }, style);\n\n    return React.createElement(\"div\", _extends({}, _omit(rest, overlayProps), {\n      className: classes,\n      style: styles,\n      ref: htmlElementRef\n    }), React.createElement(\"div\", {\n      className: addPrefix('arrow')\n    }), title ? React.createElement(\"h3\", {\n      className: addPrefix('title')\n    }, title) : null, React.createElement(\"div\", {\n      className: addPrefix('content')\n    }, children));\n  };\n\n  return Popover;\n}(React.Component);\n\nPopover.propTypes = {\n  classPrefix: PropTypes.string,\n  children: PropTypes.node,\n  title: PropTypes.node,\n  style: PropTypes.object,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  full: PropTypes.bool\n};\nexport default defaultProps({\n  classPrefix: 'popover'\n})(Popover);","map":null,"metadata":{},"sourceType":"module"}