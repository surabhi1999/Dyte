{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport setDate from \"date-fns/set_date\";\nimport isAfter from \"date-fns/is_after\";\nimport addMonths from \"date-fns/add_months\";\nimport { getUnhandledProps, prefix, defaultProps } from '../../utils';\nimport MonthDropdown from '../../Calendar/MonthDropdown';\nimport Header from '../../Calendar/Header';\nimport View from './View';\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Calendar, _React$Component);\n\n  function Calendar() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handleMoveForword = function () {\n      var _this$props$onMoveFor, _this$props;\n\n      (_this$props$onMoveFor = (_this$props = _this.props).onMoveForword) === null || _this$props$onMoveFor === void 0 ? void 0 : _this$props$onMoveFor.call(_this$props, addMonths(_this.getPageDate(), 1));\n    };\n\n    _this.handleMoveBackward = function () {\n      var _this$props$onMoveBac, _this$props2;\n\n      (_this$props$onMoveBac = (_this$props2 = _this.props).onMoveBackward) === null || _this$props$onMoveBac === void 0 ? void 0 : _this$props$onMoveBac.call(_this$props2, addMonths(_this.getPageDate(), -1));\n    };\n\n    _this.disabledBackward = function () {\n      var _this$props3 = _this.props,\n          calendarDate = _this$props3.calendarDate,\n          index = _this$props3.index;\n      var after = isAfter(setDate(calendarDate[1], 1), setDate(addMonths(calendarDate[0], 1), 1));\n\n      if (index === 0) {\n        return false;\n      }\n\n      if (!after) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _this.disabledForword = function () {\n      var _this$props4 = _this.props,\n          calendarDate = _this$props4.calendarDate,\n          index = _this$props4.index,\n          showOneCalendar = _this$props4.showOneCalendar;\n      if (showOneCalendar) return false;\n      var after = isAfter(setDate(calendarDate[1], 1), setDate(addMonths(calendarDate[0], 1), 1));\n\n      if (index === 1) {\n        return false;\n      }\n\n      if (!after) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _this.disabledMonth = function (date) {\n      var _this$props5 = _this.props,\n          calendarDate = _this$props5.calendarDate,\n          value = _this$props5.value,\n          index = _this$props5.index,\n          disabledDate = _this$props5.disabledDate,\n          showOneCalendar = _this$props5.showOneCalendar;\n      var after = true;\n\n      if (disabledDate === null || disabledDate === void 0 ? void 0 : disabledDate(date, value, 'MONTH')) {\n        return true;\n      }\n\n      if (showOneCalendar) return false;\n\n      if (index === 1) {\n        after = isAfter(date, calendarDate[0]);\n        return !after;\n      }\n\n      after = isAfter(calendarDate[1], date);\n      return !after;\n    };\n\n    return _this;\n  }\n\n  var _proto = Calendar.prototype;\n\n  _proto.getPageDate = function getPageDate() {\n    var _this$props6 = this.props,\n        calendarDate = _this$props6.calendarDate,\n        index = _this$props6.index;\n    return calendarDate[index];\n  };\n\n  _proto.shouldMountDate = function shouldMountDate(props) {\n    var _ref = props || this.props,\n        format = _ref.format;\n\n    return /Y/.test(format) && /M/.test(format) && /D/.test(format);\n  };\n\n  _proto.render = function render() {\n    var _classNames;\n\n    var _this$props7 = this.props,\n        calendarState = _this$props7.calendarState,\n        onSelect = _this$props7.onSelect,\n        onMouseMove = _this$props7.onMouseMove,\n        onToggleMonthDropdown = _this$props7.onToggleMonthDropdown,\n        onChangePageDate = _this$props7.onChangePageDate,\n        disabledDate = _this$props7.disabledDate,\n        className = _this$props7.className,\n        value = _this$props7.value,\n        hoverValue = _this$props7.hoverValue,\n        isoWeek = _this$props7.isoWeek,\n        limitEndYear = _this$props7.limitEndYear,\n        classPrefix = _this$props7.classPrefix,\n        showWeekNumbers = _this$props7.showWeekNumbers,\n        rest = _objectWithoutPropertiesLoose(_this$props7, [\"calendarState\", \"onSelect\", \"onMouseMove\", \"onToggleMonthDropdown\", \"onChangePageDate\", \"disabledDate\", \"className\", \"value\", \"hoverValue\", \"isoWeek\", \"limitEndYear\", \"classPrefix\", \"showWeekNumbers\"]);\n\n    var pageDate = this.getPageDate();\n    var dropMonth = calendarState === 'DROP_MONTH';\n    var addPrefix = prefix(classPrefix);\n    var calendarClasses = classNames(classPrefix, className, (_classNames = {}, _classNames[addPrefix('show-month-dropdown')] = dropMonth, _classNames));\n    var unhandled = getUnhandledProps(Calendar, rest);\n    return React.createElement(\"div\", _extends({}, unhandled, {\n      className: calendarClasses\n    }), React.createElement(Header, {\n      showMonth: true,\n      date: pageDate,\n      disabledBackward: this.disabledBackward(),\n      disabledForword: this.disabledForword(),\n      onMoveForword: this.handleMoveForword,\n      onMoveBackward: this.handleMoveBackward,\n      onToggleMonthDropdown: onToggleMonthDropdown\n    }), React.createElement(View, {\n      activeDate: pageDate,\n      value: value,\n      hoverValue: hoverValue,\n      onSelect: onSelect,\n      onMouseMove: onMouseMove,\n      disabledDate: disabledDate,\n      isoWeek: isoWeek,\n      showWeekNumbers: showWeekNumbers\n    }), React.createElement(MonthDropdown, {\n      date: pageDate,\n      show: dropMonth,\n      disabledMonth: this.disabledMonth,\n      onSelect: onChangePageDate,\n      limitEndYear: limitEndYear\n    }));\n  };\n\n  return Calendar;\n}(React.Component);\n\nCalendar.propTypes = {\n  calendarState: PropTypes.oneOf(['DROP_MONTH', 'DROP_TIME']),\n  index: PropTypes.number,\n  calendarDate: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n  value: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n  hoverValue: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n  format: PropTypes.string,\n  isoWeek: PropTypes.bool,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  limitEndYear: PropTypes.number,\n  disabledDate: PropTypes.func,\n  onMoveForword: PropTypes.func,\n  onMoveBackward: PropTypes.func,\n  onSelect: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  onToggleMonthDropdown: PropTypes.func,\n  onChangePageDate: PropTypes.func,\n  showOneCalendar: PropTypes.bool\n};\nCalendar.defaultProps = {\n  calendarDate: [new Date(), addMonths(new Date(), 1)],\n  index: 0\n};\nvar enhance = defaultProps({\n  classPrefix: 'calendar'\n});\nexport default enhance(Calendar);","map":null,"metadata":{},"sourceType":"module"}