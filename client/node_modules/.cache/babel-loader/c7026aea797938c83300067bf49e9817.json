{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FormattedMessage from '../IntlProvider/FormattedMessage';\nimport { getUnhandledProps, prefix, defaultProps } from '../utils';\nimport addDays from \"date-fns/add_days\";\nvar defaultRanges = [{\n  label: 'today',\n  value: new Date(),\n  closeOverlay: true\n}, {\n  label: 'yesterday',\n  value: addDays(new Date(), -1),\n  closeOverlay: true\n}];\n\nfunction hasLocaleKey(key) {\n  return defaultRanges.some(function (item) {\n    return item.label === key;\n  });\n}\n\nvar Toolbar =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inheritsLoose(Toolbar, _React$PureComponent);\n\n  function Toolbar() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;\n\n    _this.addPrefix = function (name) {\n      return prefix(_this.props.classPrefix)(name);\n    };\n\n    return _this;\n  }\n\n  var _proto = Toolbar.prototype;\n\n  _proto.renderOkButton = function renderOkButton() {\n    var _classNames;\n\n    var _this$props = this.props,\n        disabledHandle = _this$props.disabledHandle,\n        pageDate = _this$props.pageDate,\n        onOk = _this$props.onOk,\n        hideOkButton = _this$props.hideOkButton;\n\n    if (hideOkButton) {\n      return null;\n    }\n\n    var disabled = disabledHandle === null || disabledHandle === void 0 ? void 0 : disabledHandle(pageDate);\n    var classes = classNames(this.addPrefix('right-btn-ok'), (_classNames = {}, _classNames[this.addPrefix('btn-disabled')] = disabled, _classNames));\n    return React.createElement(\"div\", {\n      className: this.addPrefix('right')\n    }, React.createElement(\"button\", {\n      className: classes,\n      onClick: disabled ? undefined : onOk\n    }, React.createElement(FormattedMessage, {\n      id: \"ok\"\n    })));\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props2 = this.props,\n        ranges = _this$props2.ranges,\n        onShortcut = _this$props2.onShortcut,\n        disabledHandle = _this$props2.disabledHandle,\n        className = _this$props2.className,\n        pageDate = _this$props2.pageDate,\n        classPrefix = _this$props2.classPrefix,\n        hideOkButton = _this$props2.hideOkButton,\n        rest = _objectWithoutPropertiesLoose(_this$props2, [\"ranges\", \"onShortcut\", \"disabledHandle\", \"className\", \"pageDate\", \"classPrefix\", \"hideOkButton\"]);\n\n    if (hideOkButton && ranges.length === 0) {\n      return null;\n    }\n\n    var classes = classNames(classPrefix, className);\n    var unhandled = getUnhandledProps(Toolbar, rest);\n    return React.createElement(\"div\", _extends({}, unhandled, {\n      className: classes\n    }), React.createElement(\"div\", {\n      className: this.addPrefix('ranges')\n    }, ranges.map(function (item, index) {\n      var _classNames2;\n\n      var value = typeof item.value === 'function' ? item.value(pageDate) : item.value;\n      var disabled = disabledHandle === null || disabledHandle === void 0 ? void 0 : disabledHandle(value);\n      var itemClassName = classNames(_this2.addPrefix('option'), (_classNames2 = {}, _classNames2[_this2.addPrefix('option-disabled')] = disabled, _classNames2));\n      return React.createElement(\"a\", {\n        key: index,\n        role: \"button\",\n        tabIndex: -1,\n        className: itemClassName,\n        onClick: function onClick(event) {\n          if (disabled) {\n            return;\n          }\n\n          onShortcut === null || onShortcut === void 0 ? void 0 : onShortcut(value, item.closeOverlay, event);\n        }\n      }, hasLocaleKey(item.label) ? React.createElement(FormattedMessage, {\n        id: item.label\n      }) : item.label);\n    })), this.renderOkButton());\n  };\n\n  return Toolbar;\n}(React.PureComponent);\n\nToolbar.propTypes = {\n  ranges: PropTypes.array,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  pageDate: PropTypes.instanceOf(Date),\n  onShortcut: PropTypes.func,\n  onOk: PropTypes.func,\n  disabledHandle: PropTypes.func,\n  hideOkButton: PropTypes.bool\n};\nToolbar.defaultProps = {\n  ranges: defaultRanges\n};\nvar enhance = defaultProps({\n  classPrefix: 'picker-toolbar'\n});\nexport default enhance(Toolbar);","map":null,"metadata":{},"sourceType":"module"}