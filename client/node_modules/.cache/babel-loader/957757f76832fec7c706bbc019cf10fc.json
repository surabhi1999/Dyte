{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { defaultProps, getUnhandledProps, prefix } from '../utils';\n\nvar PlaceholderGrid =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(PlaceholderGrid, _React$Component);\n\n  function PlaceholderGrid() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = PlaceholderGrid.prototype;\n\n  _proto.render = function render() {\n    var _classNames;\n\n    var _this$props = this.props,\n        className = _this$props.className,\n        classPrefix = _this$props.classPrefix,\n        rows = _this$props.rows,\n        columns = _this$props.columns,\n        rowHeight = _this$props.rowHeight,\n        rowMargin = _this$props.rowMargin,\n        active = _this$props.active,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"classPrefix\", \"rows\", \"columns\", \"rowHeight\", \"rowMargin\", \"active\"]);\n\n    var addPrefix = prefix(classPrefix);\n    var unhandled = getUnhandledProps(PlaceholderGrid, rest);\n    var classes = classNames(classPrefix, addPrefix('grid'), className, (_classNames = {}, _classNames[addPrefix('active')] = active, _classNames));\n    var colItems = [];\n    var firstRowItemWidth = Math.random() * 30 + 30;\n    var itemWidth = firstRowItemWidth / 2;\n\n    for (var i = 0; i < columns; i++) {\n      var rowItems = [];\n\n      for (var j = 0; j < rows; j++) {\n        var widthPercent = Math.random() * 50 + 10; // when first column\n\n        if (i > 0) {\n          // when other columns\n          widthPercent = j > 0 ? itemWidth : firstRowItemWidth;\n        }\n\n        rowItems.push(React.createElement(\"p\", {\n          key: j,\n          style: {\n            width: widthPercent + \"%\",\n            height: rowHeight,\n            marginTop: j > 0 ? rowMargin : null\n          }\n        }));\n      }\n\n      colItems.push(React.createElement(\"div\", {\n        key: i,\n        className: classNames(addPrefix('grid-col'))\n      }, rowItems));\n    }\n\n    return React.createElement(\"div\", _extends({\n      className: classes\n    }, unhandled), colItems);\n  };\n\n  return PlaceholderGrid;\n}(React.Component);\n\nPlaceholderGrid.propTypes = {\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  rows: PropTypes.number,\n  columns: PropTypes.number,\n  rowHeight: PropTypes.number,\n  rowMargin: PropTypes.number,\n  active: PropTypes.bool\n};\nPlaceholderGrid.defaultProps = {\n  rows: 5,\n  columns: 5,\n  rowHeight: 10,\n  rowMargin: 20\n};\nexport default defaultProps({\n  classPrefix: 'placeholder'\n})(PlaceholderGrid);","map":null,"metadata":{},"sourceType":"module"}