{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Calendar from './Calendar';\nimport Button from '../Button';\nimport IntlContext from '../IntlProvider/IntlContext';\nimport FormattedDate from '../IntlProvider/FormattedDate';\nimport { defaultProps, prefix } from '../utils';\n\nvar CalendarPanel =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inheritsLoose(CalendarPanel, _React$PureComponent);\n\n  function CalendarPanel(props) {\n    var _this;\n\n    _this = _React$PureComponent.call(this, props) || this;\n\n    _this.handleToggleMonthDropdown = function () {\n      _this.setState({\n        showMonth: !_this.state.showMonth\n      });\n    };\n\n    _this.handleChangePageDate = function (nextValue) {\n      var _this$props$onChange, _this$props;\n\n      _this.setState({\n        value: nextValue,\n        showMonth: false\n      });\n\n      (_this$props$onChange = (_this$props = _this.props).onChange) === null || _this$props$onChange === void 0 ? void 0 : _this$props$onChange.call(_this$props, nextValue);\n    };\n\n    _this.handleClickToday = function () {\n      var _this$props$onChange2, _this$props2;\n\n      var nextValue = new Date();\n\n      _this.setState({\n        showMonth: false,\n        value: nextValue\n      });\n\n      (_this$props$onChange2 = (_this$props2 = _this.props).onChange) === null || _this$props$onChange2 === void 0 ? void 0 : _this$props$onChange2.call(_this$props2, nextValue);\n    };\n\n    _this.handleNextMonth = function (nextValue) {\n      var _this$props$onChange3, _this$props3;\n\n      _this.setState({\n        value: nextValue\n      });\n\n      (_this$props$onChange3 = (_this$props3 = _this.props).onChange) === null || _this$props$onChange3 === void 0 ? void 0 : _this$props$onChange3.call(_this$props3, nextValue);\n    };\n\n    _this.handlePrevMonth = function (nextValue) {\n      var _this$props$onChange4, _this$props4;\n\n      _this.setState({\n        value: nextValue\n      });\n\n      (_this$props$onChange4 = (_this$props4 = _this.props).onChange) === null || _this$props$onChange4 === void 0 ? void 0 : _this$props$onChange4.call(_this$props4, nextValue);\n    };\n\n    _this.handleSelect = function (nextValue) {\n      var _this$props$onSelect, _this$props5, _this$props$onChange5, _this$props6;\n\n      _this.setState({\n        value: nextValue\n      });\n\n      (_this$props$onSelect = (_this$props5 = _this.props).onSelect) === null || _this$props$onSelect === void 0 ? void 0 : _this$props$onSelect.call(_this$props5, nextValue);\n      (_this$props$onChange5 = (_this$props6 = _this.props).onChange) === null || _this$props$onChange5 === void 0 ? void 0 : _this$props$onChange5.call(_this$props6, nextValue);\n    };\n\n    _this.addPrefix = function (name) {\n      return prefix(_this.props.classPrefix)(name);\n    };\n\n    _this.renderToolbar = function () {\n      var locale = _this.props.locale;\n      return React.createElement(Button, {\n        className: _this.addPrefix('btn-today'),\n        onClick: _this.handleClickToday\n      }, locale.today || 'Today');\n    };\n\n    _this.state = {\n      value: props.defaultValue,\n      showMonth: false\n    };\n    return _this;\n  }\n\n  var _proto = CalendarPanel.prototype;\n\n  _proto.getValue = function getValue() {\n    var value = this.props.value;\n\n    if (typeof value === 'undefined') {\n      return this.state.value;\n    }\n\n    return value;\n  };\n\n  _proto.render = function render() {\n    var _classNames;\n\n    var _this$props7 = this.props,\n        locale = _this$props7.locale,\n        renderCell = _this$props7.renderCell,\n        compact = _this$props7.compact,\n        className = _this$props7.className,\n        isoWeek = _this$props7.isoWeek,\n        bordered = _this$props7.bordered,\n        rest = _objectWithoutPropertiesLoose(_this$props7, [\"locale\", \"renderCell\", \"compact\", \"className\", \"isoWeek\", \"bordered\"]);\n\n    var showMonth = this.state.showMonth;\n    var value = this.getValue();\n    var classes = classNames(this.addPrefix('panel'), className, (_classNames = {}, _classNames[this.addPrefix('bordered')] = bordered, _classNames[this.addPrefix('compact')] = compact, _classNames));\n    return React.createElement(IntlContext.Provider, {\n      value: locale\n    }, React.createElement(Calendar, _extends({\n      className: classes,\n      isoWeek: isoWeek,\n      onSelect: this.handleSelect,\n      format: \"YYYY-MM-DD\",\n      calendarState: showMonth ? 'DROP_MONTH' : null,\n      pageDate: value,\n      renderTitle: function renderTitle(date) {\n        return React.createElement(FormattedDate, {\n          date: date,\n          formatStr: locale.formattedMonthPattern || 'MMMM  YYYY'\n        });\n      },\n      renderToolbar: this.renderToolbar,\n      renderCell: renderCell,\n      onMoveForword: this.handleNextMonth,\n      onMoveBackward: this.handlePrevMonth,\n      onToggleMonthDropdown: this.handleToggleMonthDropdown,\n      onChangePageDate: this.handleChangePageDate,\n      limitEndYear: 1000\n    }, rest)));\n  };\n\n  return CalendarPanel;\n}(React.PureComponent);\n\nCalendarPanel.propTypes = {\n  value: PropTypes.instanceOf(Date),\n  defaultValue: PropTypes.instanceOf(Date),\n  isoWeek: PropTypes.bool,\n  compact: PropTypes.bool,\n  bordered: PropTypes.bool,\n  locale: PropTypes.object,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  onChange: PropTypes.func,\n  onSelect: PropTypes.func,\n  renderCell: PropTypes.func\n};\nCalendarPanel.defaultProps = {\n  defaultValue: new Date(),\n  locale: {}\n};\nexport default defaultProps({\n  classPrefix: 'calendar'\n})(CalendarPanel);","map":null,"metadata":{},"sourceType":"module"}