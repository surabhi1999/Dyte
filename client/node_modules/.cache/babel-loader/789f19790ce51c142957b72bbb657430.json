{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Ripple from '../Ripple';\nimport Button from '../Button';\nimport { prefix, defaultProps } from '../utils';\n\nvar DorpdownToggle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(DorpdownToggle, _React$Component);\n\n  function DorpdownToggle() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = DorpdownToggle.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        classPrefix = _this$props.classPrefix,\n        renderTitle = _this$props.renderTitle,\n        children = _this$props.children,\n        icon = _this$props.icon,\n        noCaret = _this$props.noCaret,\n        Component = _this$props.componentClass,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"classPrefix\", \"renderTitle\", \"children\", \"icon\", \"noCaret\", \"componentClass\"]);\n\n    var addPrefix = prefix(classPrefix);\n\n    if (renderTitle) {\n      return React.createElement(\"span\", _extends({}, props, {\n        className: classNames(classPrefix, addPrefix('custom-title'), className)\n      }), renderTitle(children), React.createElement(Ripple, null));\n    }\n\n    var buttonProps = {};\n\n    if (Component === Button) {\n      buttonProps = {\n        componentClass: 'a',\n        appearance: 'subtle'\n      };\n    }\n\n    return React.createElement(Component, _extends({}, buttonProps, props, {\n      className: classNames(classPrefix, className)\n    }), icon, children, noCaret ? null : React.createElement(\"span\", {\n      className: addPrefix('caret')\n    }));\n  };\n\n  return DorpdownToggle;\n}(React.Component);\n\nDorpdownToggle.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  icon: PropTypes.node,\n  classPrefix: PropTypes.string,\n  noCaret: PropTypes.bool,\n  componentClass: PropTypes.elementType,\n  renderTitle: PropTypes.func\n};\nexport default defaultProps({\n  componentClass: Button,\n  classPrefix: 'dropdown-toggle'\n})(DorpdownToggle);","map":null,"metadata":{},"sourceType":"module"}