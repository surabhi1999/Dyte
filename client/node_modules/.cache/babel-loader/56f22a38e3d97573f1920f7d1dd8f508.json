{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _pick from \"lodash/pick\";\nimport React from 'react';\nimport OverlayTrigger from '../Overlay/OverlayTrigger';\nimport { placementPolyfill } from '../utils';\nimport IntlContext from '../IntlProvider/IntlContext';\nvar PickerToggleTriggerProps = ['onEntered', 'onExited', 'open', 'defaultOpen', 'disabled', 'onEnter', 'onEntering', 'onExit', 'onExiting', 'onHide', 'container', 'containerPadding', 'preventOverflow', 'positionRef'];\nvar PickerToggleTrigger = React.forwardRef(function (props, ref) {\n  var pickerProps = props.pickerProps,\n      speaker = props.speaker,\n      _props$trigger = props.trigger,\n      trigger = _props$trigger === void 0 ? 'click' : _props$trigger,\n      open = props.open,\n      rest = _objectWithoutPropertiesLoose(props, [\"pickerProps\", \"speaker\", \"trigger\", \"open\"]);\n\n  var placement = pickerProps.placement;\n  return React.createElement(IntlContext.Consumer, null, function (context) {\n    return React.createElement(OverlayTrigger, _extends({\n      trigger: trigger,\n      ref: ref,\n      open: open,\n      placement: placementPolyfill(placement, context === null || context === void 0 ? void 0 : context.rtl),\n      speaker: speaker\n    }, _pick(pickerProps, PickerToggleTriggerProps), rest));\n  });\n});\nPickerToggleTrigger.displayName = 'PickerToggleTrigger';\nexport default PickerToggleTrigger;","map":null,"metadata":{},"sourceType":"module"}