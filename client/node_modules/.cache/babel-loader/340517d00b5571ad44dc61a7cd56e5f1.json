{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { defaultProps, prefix, getUnhandledProps, withStyleProps } from '../utils';\nimport { transformValueToCharacterMap, transformCharacterMapToValue } from './utils';\nimport shallowEqualArray from '../utils/shallowEqualArray';\nimport Icon from '../Icon';\nimport Character from './Character';\nimport { FormPlaintextContext } from '../Form/FormContext';\nimport { SIZE, KEY_CODE } from '../constants';\n\nvar Rate =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Rate, _React$Component);\n\n  Rate.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, nextState) {\n    var value = nextProps.value,\n        max = nextProps.max,\n        allowHalf = nextProps.allowHalf;\n    var characterMap = transformValueToCharacterMap(value, max, allowHalf);\n\n    if (typeof value !== 'undefined' && value !== nextState.prevPropsValue) {\n      return {\n        prevPropsValue: value,\n        characterMap: characterMap\n      };\n    }\n\n    return null;\n  };\n\n  function Rate(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _this.addPrefix = function (name) {\n      return prefix(_this.props.classPrefix)(name);\n    };\n\n    _this.getCharacterMap = function (value) {\n      var _this$props = _this.props,\n          max = _this$props.max,\n          allowHalf = _this$props.allowHalf;\n      return transformValueToCharacterMap(value, max, allowHalf);\n    };\n\n    _this.resetCharacterMap = function () {\n      _this.setState({\n        characterMap: _this.getCharacterMap(_this.getValue())\n      });\n    };\n\n    _this.handleMouseLeave = function (event) {\n      var _this$props$onChangeA, _this$props2;\n\n      _this.resetCharacterMap();\n\n      (_this$props$onChangeA = (_this$props2 = _this.props).onChangeActive) === null || _this$props$onChangeA === void 0 ? void 0 : _this$props$onChangeA.call(_this$props2, _this.getValue(), event);\n    };\n\n    _this.handleChangeValue = function (index, event) {\n      var _this$props3 = _this.props,\n          cleanable = _this$props3.cleanable,\n          onChange = _this$props3.onChange;\n      var characterMap = _this.state.characterMap;\n\n      var value = _this.getValue();\n\n      var nextValue = transformCharacterMapToValue(characterMap);\n\n      if (cleanable && value === nextValue && _this.getCharacterMap(value)[index] === characterMap[index]) {\n        nextValue = 0;\n      }\n\n      if (nextValue !== value) {\n        _this.setState({\n          prevPropsValue: nextValue,\n          characterMap: _this.getCharacterMap(nextValue)\n        });\n\n        onChange === null || onChange === void 0 ? void 0 : onChange(nextValue, event);\n      }\n    };\n\n    _this.handleKeyDown = function (index, event) {\n      var keyCode = event.keyCode;\n      var _this$props4 = _this.props,\n          max = _this$props4.max,\n          allowHalf = _this$props4.allowHalf;\n      var characterMap = _this.state.characterMap;\n      var nextValue = transformCharacterMapToValue(characterMap);\n\n      if (keyCode === KEY_CODE.RIGHT && nextValue < max) {\n        nextValue = allowHalf ? nextValue + 0.5 : nextValue + 1;\n      } else if (keyCode === KEY_CODE.LEFT && nextValue > 0) {\n        nextValue = allowHalf ? nextValue - 0.5 : nextValue - 1;\n      }\n\n      _this.setState({\n        characterMap: _this.getCharacterMap(nextValue)\n      });\n\n      if (keyCode === KEY_CODE.ENTER) {\n        _this.handleChangeValue(index, event);\n      }\n    };\n\n    _this.handleClick = function (index, key, event) {\n      _this.handleChangeCharacterMap(index, key, event, function () {\n        _this.handleChangeValue(index, event);\n      });\n    };\n\n    var _value = props.value;\n    var prevPropsValue = typeof _value !== 'undefined' ? _value : props.defaultValue;\n    _this.state = {\n      prevPropsValue: prevPropsValue,\n      characterMap: _this.getCharacterMap(prevPropsValue)\n    };\n    return _this;\n  }\n\n  var _proto = Rate.prototype;\n\n  _proto.getValue = function getValue() {\n    var value = this.props.value;\n    return typeof value === 'undefined' ? this.state.prevPropsValue : value;\n  };\n\n  _proto.handleChangeCharacterMap = function handleChangeCharacterMap(index, key, event, callback) {\n    var _this2 = this;\n\n    var characterMap = this.state.characterMap;\n    var nextCharacterMap = characterMap.map(function (_item, i) {\n      if (i === index && key === 'before' && _this2.props.allowHalf) {\n        return 0.5;\n      }\n\n      return index >= i ? 1 : 0;\n    });\n\n    if (!shallowEqualArray(characterMap, nextCharacterMap)) {\n      var _this$props$onChangeA2, _this$props5;\n\n      this.setState({\n        characterMap: nextCharacterMap\n      }, callback);\n      (_this$props$onChangeA2 = (_this$props5 = this.props).onChangeActive) === null || _this$props$onChangeA2 === void 0 ? void 0 : _this$props$onChangeA2.call(_this$props5, transformCharacterMapToValue(nextCharacterMap), event);\n      return;\n    }\n\n    callback === null || callback === void 0 ? void 0 : callback();\n  };\n\n  _proto.render = function render() {\n    var _classNames,\n        _this3 = this;\n\n    var _this$props6 = this.props,\n        character = _this$props6.character,\n        className = _this$props6.className,\n        classPrefix = _this$props6.classPrefix,\n        disabled = _this$props6.disabled,\n        max = _this$props6.max,\n        renderCharacter = _this$props6.renderCharacter,\n        readOnly = _this$props6.readOnly,\n        vertical = _this$props6.vertical,\n        rest = _objectWithoutPropertiesLoose(_this$props6, [\"character\", \"className\", \"classPrefix\", \"disabled\", \"max\", \"renderCharacter\", \"readOnly\", \"vertical\"]);\n\n    var characterMap = this.state.characterMap;\n    var hoverValue = transformCharacterMapToValue(characterMap);\n    var classes = classNames(classPrefix, className, (_classNames = {}, _classNames[this.addPrefix('disabled')] = disabled, _classNames[this.addPrefix('readonly')] = readOnly, _classNames));\n    var unhandled = getUnhandledProps(Rate, rest);\n    var plaintextRate = React.createElement(\"div\", _extends({}, unhandled, {\n      className: className\n    }), this.getValue() + \"(\" + max + \")\");\n    var rate = React.createElement(\"ul\", _extends({}, unhandled, {\n      className: classes,\n      onMouseLeave: this.handleMouseLeave\n    }), characterMap.map(function (item, index) {\n      return React.createElement(Character, {\n        key: index,\n        status: item,\n        disabled: disabled || readOnly,\n        vertical: vertical,\n        onClick: _this3.handleClick.bind(_this3, index),\n        onKeyDown: _this3.handleKeyDown.bind(_this3, index),\n        onMouseMove: _this3.handleChangeCharacterMap.bind(_this3, index)\n      }, renderCharacter ? renderCharacter(hoverValue, index) : character);\n    }));\n    return React.createElement(FormPlaintextContext.Consumer, null, function (plaintext) {\n      return plaintext ? plaintextRate : rate;\n    });\n  };\n\n  return Rate;\n}(React.Component);\n\nRate.propTypes = {\n  allowHalf: PropTypes.bool,\n  character: PropTypes.node,\n  classPrefix: PropTypes.string,\n  cleanable: PropTypes.bool,\n  defaultValue: PropTypes.number,\n  disabled: PropTypes.bool,\n  max: PropTypes.number,\n  renderCharacter: PropTypes.func,\n  readOnly: PropTypes.bool,\n  size: PropTypes.oneOf(SIZE),\n  value: PropTypes.number,\n  vertical: PropTypes.bool,\n  onChange: PropTypes.func,\n  onChangeActive: PropTypes.func\n};\nRate.defaultProps = {\n  character: React.createElement(Icon, {\n    icon: \"star\"\n  }),\n  cleanable: true,\n  defaultValue: 0,\n  max: 5,\n  size: 'md'\n};\nexport default compose(withStyleProps({\n  hasSize: true,\n  hasColor: true\n}), defaultProps({\n  classPrefix: 'rate'\n}))(Rate);","map":null,"metadata":{},"sourceType":"module"}