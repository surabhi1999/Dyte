{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { prefix } from '../utils';\n\nvar Message =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Message, _React$Component);\n\n  function Message() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.closeTimer = null;\n\n    _this.close = function () {\n      var _this$props$onClose, _this$props;\n\n      _this.clearCloseTimer();\n\n      (_this$props$onClose = (_this$props = _this.props).onClose) === null || _this$props$onClose === void 0 ? void 0 : _this$props$onClose.call(_this$props);\n    };\n\n    _this.addPrefix = function (name) {\n      return prefix(_this.props.classPrefix)(name);\n    };\n\n    return _this;\n  }\n\n  var _proto = Message.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    var duration = this.props.duration;\n\n    if (duration) {\n      this.closeTimer = setTimeout(function () {\n        _this2.close();\n      }, duration);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.clearCloseTimer();\n  };\n\n  _proto.clearCloseTimer = function clearCloseTimer() {\n    if (this.closeTimer) {\n      clearTimeout(this.closeTimer);\n      this.closeTimer = null;\n    }\n  };\n\n  _proto.render = function render() {\n    var _classNames;\n\n    var _this$props2 = this.props,\n        classPrefix = _this$props2.classPrefix,\n        closable = _this$props2.closable,\n        className = _this$props2.className,\n        content = _this$props2.content,\n        style = _this$props2.style,\n        htmlElementRef = _this$props2.htmlElementRef,\n        _this$props2$type = _this$props2.type,\n        type = _this$props2$type === void 0 ? '' : _this$props2$type;\n    var ns = this.addPrefix('item');\n    var classes = classNames(ns, (_classNames = {}, _classNames[this.addPrefix('item-closable')] = closable, _classNames[classPrefix + \"-\" + type] = !!type, _classNames));\n    return React.createElement(\"div\", {\n      style: style,\n      className: classNames(className, ns + \"-wrapper\"),\n      ref: htmlElementRef\n    }, React.createElement(\"div\", {\n      className: classes\n    }, React.createElement(\"div\", {\n      className: ns + \"-content\"\n    }, content), closable && React.createElement(\"div\", {\n      role: \"button\",\n      tabIndex: -1,\n      onClick: this.close,\n      className: ns + \"-close\"\n    }, React.createElement(\"span\", {\n      className: ns + \"-close-x\"\n    }))));\n  };\n\n  return Message;\n}(React.Component);\n\nMessage.propTypes = {\n  duration: PropTypes.number,\n  content: PropTypes.any,\n  closable: PropTypes.bool,\n  classPrefix: PropTypes.string,\n  className: PropTypes.string,\n  type: PropTypes.string,\n  onClose: PropTypes.func,\n  style: PropTypes.object\n};\nexport default Message;","map":null,"metadata":{},"sourceType":"module"}