{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { defaultClassPrefix, prefix } from './utils/prefix';\nvar ColumnGroup =\n/*#__PURE__*/\nReact.forwardRef(function (props, ref) {\n  var header = props.header,\n      className = props.className,\n      children = props.children,\n      classPrefix = props.classPrefix,\n      headerHeight = props.headerHeight,\n      verticalAlign = props.verticalAlign,\n      width = props.width,\n      rest = _objectWithoutPropertiesLoose(props, [\"header\", \"className\", \"children\", \"classPrefix\", \"headerHeight\", \"verticalAlign\", \"width\"]);\n\n  var height = headerHeight / 2;\n  var styles = {\n    height: height,\n    width: width\n  };\n\n  var contentStyles = _extends({}, styles, {\n    verticalAlign: verticalAlign\n  });\n\n  var addPrefix = React.useCallback(function (name) {\n    return prefix(classPrefix)(name);\n  }, []);\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", _extends({\n      ref: ref,\n      className: classNames(classPrefix, className)\n    }, rest),\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: addPrefix('header'),\n      style: styles\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: addPrefix('header-content'),\n      style: contentStyles\n    }, header)), React.Children.map(children, function (node) {\n      var _node$props;\n\n      var nodeStyles = _extends({\n        height: height\n      }, (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.style, {\n        top: styles.height\n      });\n\n      return (\n        /*#__PURE__*/\n        React.cloneElement(node, {\n          className: addPrefix('cell'),\n          style: nodeStyles,\n          headerHeight: height,\n          verticalAlign: verticalAlign,\n          children:\n          /*#__PURE__*/\n          React.createElement(\"span\", {\n            className: addPrefix('cell-content')\n          }, node.props.children)\n        })\n      );\n    }))\n  );\n});\nColumnGroup.displayName = 'ColumnGroup';\nColumnGroup.defaultProps = {\n  headerHeight: 80,\n  classPrefix: defaultClassPrefix('table-column-group')\n};\nColumnGroup.propTypes = {\n  header: PropTypes.node,\n  classPrefix: PropTypes.string,\n  verticalAlign: PropTypes.oneOf(['top', 'middle', 'bottom'])\n};\nexport default ColumnGroup;","map":null,"metadata":{},"sourceType":"module"}