{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { setStatic, compose } from 'recompose';\nimport InputGroupAddon from './InputGroupAddon';\nimport InputGroupButton from './InputGroupButton';\nimport { prefix, withStyleProps, defaultProps, createContext } from '../utils';\nexport var InputGroupContext = createContext(null);\n\nvar InputGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InputGroup, _React$Component);\n\n  function InputGroup(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _this.handleFocus = function () {\n      _this.setState({\n        focus: true\n      });\n    };\n\n    _this.handleBlur = function () {\n      _this.setState({\n        focus: false\n      });\n    };\n\n    _this.state = {\n      focus: false\n    };\n    return _this;\n  }\n\n  var _proto = InputGroup.prototype;\n\n  _proto.disabledChildren = function disabledChildren() {\n    var children = this.props.children;\n    return React.Children.map(children, function (item) {\n      if (React.isValidElement(item)) {\n        return React.cloneElement(item, {\n          disabled: true\n        });\n      }\n\n      return item;\n    });\n  };\n\n  _proto.render = function render() {\n    var _classNames;\n\n    var _this$props = this.props,\n        className = _this$props.className,\n        classPrefix = _this$props.classPrefix,\n        disabled = _this$props.disabled,\n        inside = _this$props.inside,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"classPrefix\", \"disabled\", \"inside\", \"children\"]);\n\n    var focus = this.state.focus;\n    var addPrefix = prefix(classPrefix);\n    var classes = classNames(classPrefix, className, (_classNames = {}, _classNames[addPrefix('inside')] = inside, _classNames[addPrefix('focus')] = focus, _classNames[addPrefix('disabled')] = disabled, _classNames));\n    return React.createElement(InputGroupContext.Provider, {\n      value: {\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur\n      }\n    }, React.createElement(\"div\", _extends({}, props, {\n      className: classes\n    }), disabled ? this.disabledChildren() : children));\n  };\n\n  return InputGroup;\n}(React.Component);\n\nInputGroup.propTypes = {\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  inside: PropTypes.bool,\n  disabled: PropTypes.bool,\n  children: PropTypes.node\n};\nvar EnhancedInputGroup = compose(withStyleProps({\n  hasSize: true\n}), defaultProps({\n  classPrefix: 'input-group'\n}))(InputGroup);\nsetStatic('Addon', InputGroupAddon)(EnhancedInputGroup);\nsetStatic('Button', InputGroupButton)(EnhancedInputGroup);\nexport default EnhancedInputGroup;","map":null,"metadata":{},"sourceType":"module"}