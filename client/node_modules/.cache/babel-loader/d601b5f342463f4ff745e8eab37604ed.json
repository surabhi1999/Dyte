{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { compose } from 'recompose';\nimport { prefix, withStyleProps, defaultProps } from '../utils';\n\nvar Tag =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Tag, _React$Component);\n\n  function Tag() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tag.prototype;\n\n  _proto.render = function render() {\n    var _classnames;\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        Component = _this$props.componentClass,\n        onClose = _this$props.onClose,\n        classPrefix = _this$props.classPrefix,\n        closable = _this$props.closable,\n        className = _this$props.className,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"componentClass\", \"onClose\", \"classPrefix\", \"closable\", \"className\"]);\n\n    var addPrefix = prefix(classPrefix);\n    var classes = classnames(classPrefix, className, (_classnames = {}, _classnames[addPrefix('closeable')] = closable, _classnames));\n    return React.createElement(Component, _extends({\n      className: classes\n    }, rest), React.createElement(\"span\", {\n      className: addPrefix('text')\n    }, children), closable && React.createElement(\"i\", {\n      role: \"button\",\n      tabIndex: -1,\n      className: addPrefix('icon-close'),\n      onClick: onClose\n    }));\n  };\n\n  return Tag;\n}(React.Component);\n\nTag.propTypes = {\n  closable: PropTypes.bool,\n  classPrefix: PropTypes.string,\n  onClose: PropTypes.func,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  componentClass: PropTypes.elementType\n};\nexport default compose(withStyleProps({\n  hasColor: true,\n  defaultColor: 'default'\n}), defaultProps({\n  componentClass: 'div',\n  classPrefix: 'tag'\n}))(Tag);","map":null,"metadata":{},"sourceType":"module"}