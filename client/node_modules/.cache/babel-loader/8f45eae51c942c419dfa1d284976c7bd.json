{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _get from \"lodash/get\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withStyleProps, defaultProps, createChainedFunction, getUnhandledProps, refType } from '../utils';\nimport { FormPlaintextContext } from '../Form/FormContext';\nimport { FormGroupContext } from '../FormGroup/FormGroup';\nimport { InputGroupContext } from '../InputGroup/InputGroup';\n\nvar Input =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handleChange = function (event) {\n      var _this$props$onChange, _this$props;\n\n      var nextValue = _get(event, 'target.value');\n\n      (_this$props$onChange = (_this$props = _this.props).onChange) === null || _this$props$onChange === void 0 ? void 0 : _this$props$onChange.call(_this$props, nextValue, event);\n    };\n\n    _this.handleKeyDown = function (event) {\n      var _this$props$onKeyDown, _this$props3;\n\n      if (event.keyCode === 13) {\n        var _this$props$onPressEn, _this$props2;\n\n        (_this$props$onPressEn = (_this$props2 = _this.props).onPressEnter) === null || _this$props$onPressEn === void 0 ? void 0 : _this$props$onPressEn.call(_this$props2, event);\n      }\n\n      (_this$props$onKeyDown = (_this$props3 = _this.props).onKeyDown) === null || _this$props$onKeyDown === void 0 ? void 0 : _this$props$onKeyDown.call(_this$props3, event);\n    };\n\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props4 = this.props,\n        type = _this$props4.type,\n        className = _this$props4.className,\n        classPrefix = _this$props4.classPrefix,\n        Component = _this$props4.componentClass,\n        onFocus = _this$props4.onFocus,\n        onBlur = _this$props4.onBlur,\n        disabled = _this$props4.disabled,\n        value = _this$props4.value,\n        defaultValue = _this$props4.defaultValue,\n        inputRef = _this$props4.inputRef,\n        id = _this$props4.id,\n        rest = _objectWithoutPropertiesLoose(_this$props4, [\"type\", \"className\", \"classPrefix\", \"componentClass\", \"onFocus\", \"onBlur\", \"disabled\", \"value\", \"defaultValue\", \"inputRef\", \"id\"]);\n\n    var classes = classNames(classPrefix, className);\n    var unhandled = getUnhandledProps(Input, rest);\n    var plaintextInput = React.createElement(\"div\", _extends({}, unhandled, {\n      className: classes\n    }), _isUndefined(value) ? defaultValue : value);\n    var input = React.createElement(FormGroupContext.Consumer, null, function (controlId) {\n      return React.createElement(Component, _extends({}, unhandled, {\n        ref: inputRef,\n        type: type,\n        id: id || controlId,\n        value: value,\n        defaultValue: defaultValue,\n        disabled: disabled,\n        onKeyDown: _this2.handleKeyDown,\n        onFocus: createChainedFunction(onFocus, _get(_this2.context, 'onFocus')),\n        onBlur: createChainedFunction(onBlur, _get(_this2.context, 'onBlur')),\n        className: classes,\n        onChange: _this2.handleChange\n      }));\n    });\n    return React.createElement(FormPlaintextContext.Consumer, null, function (plaintext) {\n      return plaintext ? plaintextInput : input;\n    });\n  };\n\n  return Input;\n}(React.Component);\n\nInput.contextType = InputGroupContext;\nInput.propTypes = {\n  type: PropTypes.string,\n  componentClass: PropTypes.elementType,\n  id: PropTypes.string,\n  classPrefix: PropTypes.string,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  inputRef: refType,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onPressEnter: PropTypes.func\n};\nInput.defaultProps = {\n  type: 'text'\n};\nexport default compose(withStyleProps({\n  hasSize: true\n}), defaultProps({\n  classPrefix: 'input',\n  componentClass: 'input'\n}))(Input);","map":null,"metadata":{},"sourceType":"module"}