{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { setDisplayName, wrapDisplayName, setPropTypes } from 'recompose';\nimport prefix from './prefix';\nimport extendReactStatics from './extendReactStatics';\nimport { SIZE, STATUS, COLOR } from '../constants';\nimport refType from './refType';\n\nfunction withStyleProps(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return function (BaseComponent) {\n    var _options = options,\n        hasSize = _options.hasSize,\n        hasStatus = _options.hasStatus,\n        hasColor = _options.hasColor,\n        defaultColor = _options.defaultColor;\n    var WithStyleComponent = React.forwardRef(function (props, ref) {\n      var _classNames;\n\n      var classPrefix = props.classPrefix,\n          size = props.size,\n          color = props.color,\n          status = props.status,\n          className = props.className,\n          rest = _objectWithoutPropertiesLoose(props, [\"classPrefix\", \"size\", \"color\", \"status\", \"className\"]);\n\n      var addPrefix = prefix(classPrefix);\n      var classes = classNames(className, (_classNames = {}, _classNames[addPrefix(size)] = hasSize && size, _classNames[addPrefix(color)] = hasColor && color, _classNames[addPrefix(defaultColor)] = !color, _classNames[addPrefix(status)] = hasStatus && status, _classNames));\n      return React.createElement(BaseComponent, _extends({}, rest, {\n        ref: ref,\n        classPrefix: classPrefix,\n        className: classes\n      }));\n    });\n    var propTypes = {\n      innerRef: refType\n    };\n\n    if (hasSize) {\n      propTypes.size = PropTypes.oneOf(SIZE);\n    }\n\n    if (hasColor) {\n      propTypes.color = PropTypes.oneOf(COLOR);\n    }\n\n    if (hasStatus) {\n      propTypes.status = PropTypes.oneOf(STATUS);\n    }\n\n    extendReactStatics(WithStyleComponent, BaseComponent);\n    setPropTypes(propTypes)(WithStyleComponent);\n\n    if (process.env.RUN_ENV === 'test') {\n      return setDisplayName(wrapDisplayName(BaseComponent, '__test__'))(WithStyleComponent);\n    }\n\n    return setDisplayName(wrapDisplayName(BaseComponent, 'withStyleProps'))(WithStyleComponent);\n  };\n}\n\nexport default withStyleProps;","map":null,"metadata":{},"sourceType":"module"}