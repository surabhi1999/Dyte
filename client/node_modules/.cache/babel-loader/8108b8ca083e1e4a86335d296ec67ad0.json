{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _isNumber from \"lodash/isNumber\";\nimport _isString from \"lodash/isString\";\nimport _isNull from \"lodash/isNull\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport shallowEqual from '../utils/shallowEqual';\nimport { getUnhandledProps, prefix } from '../utils';\nimport { DropdownMenuCheckItem } from '../Picker';\nimport createUtils from './utils';\nexport var dropdownMenuPropTypes = {\n  classPrefix: PropTypes.string,\n  data: PropTypes.array,\n  disabledItemValues: PropTypes.array,\n  value: PropTypes.array,\n  childrenKey: PropTypes.string,\n  valueKey: PropTypes.string,\n  labelKey: PropTypes.string,\n  menuWidth: PropTypes.number,\n  menuHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  className: PropTypes.string,\n  cascade: PropTypes.bool,\n  cascadeItems: PropTypes.array,\n  cascadePathItems: PropTypes.array,\n  uncheckableItemValues: PropTypes.array,\n  renderMenuItem: PropTypes.func,\n  renderMenu: PropTypes.func,\n  onSelect: PropTypes.func,\n  onCheck: PropTypes.func\n};\n\nvar DropdownMenu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(DropdownMenu, _React$Component);\n\n  function DropdownMenu(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.utils = {};\n    _this.menus = [];\n\n    _this.handleSelect = function (layer, node, event) {\n      var _this$props = _this.props,\n          onSelect = _this$props.onSelect,\n          childrenKey = _this$props.childrenKey;\n      var children = node[childrenKey];\n\n      var isLeafNode = _isUndefined(children) || _isNull(children);\n\n      var items = (children || []).map(function (item) {\n        return _extends({}, item, {\n          parent: node\n        });\n      });\n\n      var _this$getCascadeItems = _this.getCascadeItems(items, layer + 1, node, isLeafNode),\n          cascadeItems = _this$getCascadeItems.cascadeItems,\n          cascadePathItems = _this$getCascadeItems.cascadePathItems;\n\n      onSelect === null || onSelect === void 0 ? void 0 : onSelect(node, cascadeItems, cascadePathItems, event);\n    };\n\n    _this.addPrefix = function (name) {\n      return prefix(_this.props.classPrefix)(name);\n    };\n\n    _this.utils = createUtils(props);\n    return _this;\n  }\n\n  var _proto = DropdownMenu.prototype;\n\n  _proto.getCascadeItems = function getCascadeItems(items, layer, node, isLeafNode) {\n    var _this$props2 = this.props,\n        _this$props2$cascadeI = _this$props2.cascadeItems,\n        cascadeItems = _this$props2$cascadeI === void 0 ? [] : _this$props2$cascadeI,\n        cascadePathItems = _this$props2.cascadePathItems;\n    var nextItems = [];\n    var nextPathItems = [];\n\n    for (var i = 0; i < cascadeItems.length && i < layer; i += 1) {\n      nextItems.push(cascadeItems[i]);\n\n      if (i < layer - 1 && cascadePathItems) {\n        nextPathItems.push(cascadePathItems[i]);\n      }\n    }\n\n    nextPathItems.push(node);\n\n    if (!isLeafNode) {\n      nextItems.push(items);\n    }\n\n    return {\n      cascadeItems: nextItems,\n      cascadePathItems: nextPathItems\n    };\n  };\n\n  _proto.renderCascadeNode = function renderCascadeNode(node, index, layer, focus, uncheckable) {\n    var _classNames;\n\n    var _this$props3 = this.props,\n        _this$props3$value = _this$props3.value,\n        value = _this$props3$value === void 0 ? [] : _this$props3$value,\n        valueKey = _this$props3.valueKey,\n        labelKey = _this$props3.labelKey,\n        childrenKey = _this$props3.childrenKey,\n        disabledItemValues = _this$props3.disabledItemValues,\n        renderMenuItem = _this$props3.renderMenuItem,\n        onCheck = _this$props3.onCheck,\n        cascade = _this$props3.cascade;\n    var children = node[childrenKey];\n    var itemValue = node[valueKey];\n    var label = node[labelKey];\n    var disabled = disabledItemValues.some(function (disabledValue) {\n      return shallowEqual(disabledValue, itemValue);\n    }); // Use `value` in keys when If `value` is string or number\n\n    var onlyKey = _isString(itemValue) || _isNumber(itemValue) ? itemValue : index;\n    var active = value.some(function (v) {\n      return v === itemValue;\n    });\n\n    if (cascade) {\n      active = active || this.utils.isSomeParentChecked(node, value);\n    }\n\n    value.some(function (item) {\n      return shallowEqual(item, itemValue);\n    });\n    var classes = classNames((_classNames = {}, _classNames[this.addPrefix('cascader-menu-has-children')] = children, _classNames));\n    return React.createElement(DropdownMenuCheckItem, {\n      key: layer + \"-\" + onlyKey,\n      disabled: disabled,\n      active: active,\n      focus: focus,\n      value: node,\n      className: classes,\n      componentClass: \"li\",\n      indeterminate: cascade && !active && this.utils.isSomeChildChecked(node, value),\n      onSelectItem: this.handleSelect.bind(this, layer),\n      onCheck: onCheck,\n      checkable: !uncheckable\n    }, renderMenuItem ? renderMenuItem(label, node) : label, children ? React.createElement(\"span\", {\n      className: this.addPrefix('cascader-menu-caret')\n    }) : null);\n  };\n\n  _proto.renderCascade = function renderCascade() {\n    var _this2 = this;\n\n    var _this$props4 = this.props,\n        menuWidth = _this$props4.menuWidth,\n        menuHeight = _this$props4.menuHeight,\n        valueKey = _this$props4.valueKey,\n        renderMenu = _this$props4.renderMenu,\n        _this$props4$cascadeI = _this$props4.cascadeItems,\n        cascadeItems = _this$props4$cascadeI === void 0 ? [] : _this$props4$cascadeI,\n        cascadePathItems = _this$props4.cascadePathItems,\n        uncheckableItemValues = _this$props4.uncheckableItemValues;\n    var styles = {\n      width: cascadeItems.length * menuWidth\n    };\n    var columnStyles = {\n      height: menuHeight,\n      width: menuWidth\n    };\n    var cascadeNodes = cascadeItems.map(function (children, layer) {\n      var _classNames2;\n\n      var uncheckableCount = 0;\n      var onlyKey = layer + \"_\" + children.length;\n      var menu = React.createElement(\"ul\", null, children.map(function (item, index) {\n        var uncheckable = uncheckableItemValues.some(function (uncheckableValue) {\n          return shallowEqual(uncheckableValue, item[valueKey]);\n        });\n\n        if (uncheckable) {\n          uncheckableCount++;\n        }\n\n        return _this2.renderCascadeNode(item, index, layer, cascadePathItems[layer] && shallowEqual(cascadePathItems[layer][valueKey], item[valueKey]), uncheckable);\n      }));\n      var parentNode = cascadePathItems[layer - 1];\n      var columnClasses = classNames(_this2.addPrefix('cascader-menu-column'), (_classNames2 = {}, _classNames2[_this2.addPrefix('cascader-menu-column-uncheckable')] = uncheckableCount === children.length, _classNames2));\n      var node = React.createElement(\"div\", {\n        key: onlyKey,\n        className: columnClasses,\n        ref: function ref(_ref) {\n          return _this2.menus[layer] = _ref;\n        },\n        style: columnStyles\n      }, renderMenu ? renderMenu(children, menu, parentNode) : menu);\n      return node;\n    });\n    return React.createElement(\"div\", {\n      style: styles\n    }, cascadeNodes);\n  };\n\n  _proto.render = function render() {\n    var _this$props5 = this.props,\n        className = _this$props5.className,\n        rest = _objectWithoutPropertiesLoose(_this$props5, [\"className\"]);\n\n    var classes = classNames(this.addPrefix('cascader-menu-items'), className);\n    var unhandled = getUnhandledProps(DropdownMenu, rest);\n    return React.createElement(\"div\", _extends({}, unhandled, {\n      className: classes\n    }), this.renderCascade());\n  };\n\n  return DropdownMenu;\n}(React.Component);\n\nDropdownMenu.propTypes = dropdownMenuPropTypes;\nDropdownMenu.defaultProps = {\n  data: [],\n  disabledItemValues: [],\n  uncheckableItemValues: [],\n  cascadeItems: [],\n  cascadePathItems: [],\n  menuWidth: 156,\n  menuHeight: 200,\n  childrenKey: 'children',\n  valueKey: 'value',\n  labelKey: 'label'\n};\nexport default DropdownMenu;","map":null,"metadata":{},"sourceType":"module"}