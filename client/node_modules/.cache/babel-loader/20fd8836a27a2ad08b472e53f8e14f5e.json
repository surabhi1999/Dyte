{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport PaginationButton from './PaginationButton';\nimport SafeAnchor from '../SafeAnchor';\nimport Icon from '../Icon';\nimport { withStyleProps, defaultProps, getUnhandledProps } from '../utils';\nimport { PAGINATION_ICON_NAMES } from '../constants';\n\nvar Pagination =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Pagination, _React$Component);\n\n  function Pagination() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Pagination.prototype;\n  /**\n   * Note that `handledProps` are generated automatically during\n   * build with `babel-plugin-transform-react-flow-handled-props`\n   */\n\n  _proto.renderPageButtons = function renderPageButtons() {\n    var pageButtons = [];\n    var startPage;\n    var endPage;\n    var hasHiddenPagesAfter;\n    var _this$props = this.props,\n        maxButtons = _this$props.maxButtons,\n        activePage = _this$props.activePage,\n        pages = _this$props.pages,\n        ellipsis = _this$props.ellipsis,\n        boundaryLinks = _this$props.boundaryLinks,\n        locale = _this$props.locale;\n\n    if (maxButtons) {\n      var hiddenPagesBefore = activePage - Math.floor(maxButtons / 2);\n      startPage = hiddenPagesBefore > 1 ? hiddenPagesBefore : 1;\n      hasHiddenPagesAfter = startPage + maxButtons <= pages;\n\n      if (!hasHiddenPagesAfter) {\n        endPage = pages;\n        startPage = pages - maxButtons + 1;\n\n        if (startPage < 1) {\n          startPage = 1;\n        }\n      } else {\n        endPage = startPage + maxButtons - 1;\n      }\n    } else {\n      startPage = 1;\n      endPage = pages;\n    }\n\n    for (var pagenumber = startPage; pagenumber <= endPage; pagenumber += 1) {\n      pageButtons.push(this.renderItem({\n        key: pagenumber,\n        eventKey: pagenumber,\n        active: pagenumber === activePage,\n        children: pagenumber\n      }));\n    }\n\n    if (boundaryLinks && ellipsis && startPage !== 1) {\n      pageButtons.unshift(this.renderItem({\n        key: 'ellipsisFirst',\n        disabled: true,\n        children: React.createElement(\"span\", {\n          \"aria-label\": \"More\"\n        }, ellipsis === true ? React.createElement(Icon, {\n          icon: PAGINATION_ICON_NAMES.more\n        }) : ellipsis)\n      }));\n      pageButtons.unshift(this.renderItem({\n        key: 1,\n        eventKey: 1,\n        children: 1\n      }));\n    }\n\n    if (maxButtons && hasHiddenPagesAfter && ellipsis) {\n      pageButtons.push(this.renderItem({\n        key: 'ellipsis',\n        disabled: true,\n        children: React.createElement(\"span\", {\n          \"aria-label\": \"More\",\n          title: locale.more\n        }, ellipsis === true ? React.createElement(Icon, {\n          icon: PAGINATION_ICON_NAMES.more\n        }) : ellipsis)\n      }));\n\n      if (boundaryLinks && endPage !== pages) {\n        pageButtons.push(this.renderItem({\n          key: pages,\n          eventKey: pages,\n          disabled: false,\n          children: pages\n        }));\n      }\n    }\n\n    return pageButtons;\n  };\n\n  _proto.renderPrev = function renderPrev() {\n    var _this$props2 = this.props,\n        activePage = _this$props2.activePage,\n        prev = _this$props2.prev,\n        locale = _this$props2.locale;\n\n    if (!prev) {\n      return null;\n    }\n\n    return this.renderItem({\n      key: 'prev',\n      eventKey: activePage - 1,\n      disabled: activePage === 1,\n      children: React.createElement(\"span\", {\n        \"aria-label\": \"Previous\",\n        title: locale.prev\n      }, prev === true ? React.createElement(Icon, {\n        icon: PAGINATION_ICON_NAMES.prev\n      }) : prev)\n    });\n  };\n\n  _proto.renderNext = function renderNext() {\n    var _this$props3 = this.props,\n        pages = _this$props3.pages,\n        activePage = _this$props3.activePage,\n        next = _this$props3.next,\n        locale = _this$props3.locale;\n\n    if (!next) {\n      return null;\n    }\n\n    return this.renderItem({\n      key: 'next',\n      eventKey: activePage + 1,\n      disabled: activePage >= pages,\n      children: React.createElement(\"span\", {\n        \"aria-label\": \"Next\",\n        title: locale.next\n      }, next === true ? React.createElement(Icon, {\n        icon: PAGINATION_ICON_NAMES.next\n      }) : next)\n    });\n  };\n\n  _proto.renderFirst = function renderFirst() {\n    var _this$props4 = this.props,\n        activePage = _this$props4.activePage,\n        first = _this$props4.first,\n        locale = _this$props4.locale;\n\n    if (!first) {\n      return null;\n    }\n\n    return this.renderItem({\n      key: 'first',\n      eventKey: 1,\n      disabled: activePage === 1,\n      children: React.createElement(\"span\", {\n        \"aria-label\": \"First\",\n        title: locale.first\n      }, first === true ? React.createElement(Icon, {\n        icon: PAGINATION_ICON_NAMES.first\n      }) : first)\n    });\n  };\n\n  _proto.renderLast = function renderLast() {\n    var _this$props5 = this.props,\n        pages = _this$props5.pages,\n        activePage = _this$props5.activePage,\n        last = _this$props5.last,\n        locale = _this$props5.locale;\n\n    if (!last) {\n      return null;\n    }\n\n    return this.renderItem({\n      key: 'last',\n      eventKey: pages,\n      disabled: activePage >= pages,\n      children: React.createElement(\"span\", {\n        \"aria-label\": \"Last\",\n        title: locale.last\n      }, last === true ? React.createElement(Icon, {\n        icon: PAGINATION_ICON_NAMES.last\n      }) : last)\n    });\n  };\n\n  _proto.renderItem = function renderItem(props) {\n    var _this$props6 = this.props,\n        onSelect = _this$props6.onSelect,\n        buttonComponentClass = _this$props6.buttonComponentClass,\n        disabled = _this$props6.disabled;\n    var disabledButton = props.disabled;\n\n    if (typeof disabled === 'function') {\n      disabledButton = disabled(props.eventKey);\n    } else if (typeof disabled === 'boolean') {\n      disabledButton = disabled;\n    }\n\n    return React.createElement(PaginationButton, _extends({}, props, {\n      disabled: disabledButton,\n      onSelect: disabledButton ? null : onSelect,\n      componentClass: buttonComponentClass\n    }));\n  };\n\n  _proto.render = function render() {\n    var _this$props7 = this.props,\n        className = _this$props7.className,\n        classPrefix = _this$props7.classPrefix,\n        rest = _objectWithoutPropertiesLoose(_this$props7, [\"className\", \"classPrefix\"]);\n\n    var unhandled = getUnhandledProps(Pagination, rest);\n    return React.createElement(\"ul\", _extends({\n      className: classNames(classPrefix, className)\n    }, unhandled), this.renderFirst(), this.renderPrev(), this.renderPageButtons(), this.renderNext(), this.renderLast());\n  };\n\n  return Pagination;\n}(React.Component);\n\nPagination.propTypes = {\n  activePage: PropTypes.number,\n  pages: PropTypes.number,\n  maxButtons: PropTypes.number,\n  boundaryLinks: PropTypes.bool,\n  ellipsis: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  first: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  last: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  prev: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  next: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  buttonComponentClass: PropTypes.elementType,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  locale: PropTypes.object,\n  disabled: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n  onSelect: PropTypes.func\n};\nPagination.defaultProps = {\n  activePage: 1,\n  pages: 1,\n  maxButtons: 0,\n  buttonComponentClass: SafeAnchor,\n  locale: {\n    more: 'More',\n    prev: 'Previous',\n    next: 'Next',\n    first: 'First',\n    last: 'Last'\n  }\n};\nPagination.handledProps = [];\nexport default compose(withStyleProps({\n  hasSize: true\n}), defaultProps({\n  classPrefix: 'pagination'\n}))(Pagination);","map":null,"metadata":{},"sourceType":"module"}