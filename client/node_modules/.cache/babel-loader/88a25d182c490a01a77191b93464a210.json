{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _get from \"lodash/get\";\nimport * as React from 'react';\nimport { setDisplayName, wrapDisplayName } from 'recompose';\nimport format from 'date-fns/format';\nimport defaultLocale from './locales/default';\nimport extendReactStatics from '../utils/extendReactStatics';\nimport { IntlGlobalContext } from './IntlProvider';\n\nvar mergeObject = function mergeObject(list) {\n  return list.reduce(function (a, b) {\n    a = _extends({}, a, {}, b);\n    return a;\n  }, {});\n};\n\nfunction withLocale(combineKeys) {\n  if (combineKeys === void 0) {\n    combineKeys = [];\n  }\n\n  return function (BaseComponent) {\n    var WithLocale = React.forwardRef(function (props, ref) {\n      return React.createElement(IntlGlobalContext.Consumer, null, function (options) {\n        var locale = mergeObject(combineKeys.map(function (key) {\n          return _get(options || defaultLocale, \"\" + key);\n        }));\n\n        if (options && typeof options.rtl !== undefined) {\n          locale.rtl = options.rtl;\n        } else if (typeof window !== 'undefined' && (document.body.getAttribute('dir') || document.dir) === 'rtl') {\n          locale.rtl = true;\n        }\n\n        locale.formatDate = (options === null || options === void 0 ? void 0 : options.formatDate) || format;\n        return React.createElement(BaseComponent, _extends({\n          ref: ref,\n          locale: locale\n        }, props));\n      });\n    });\n    WithLocale.displayName = BaseComponent.displayName;\n    extendReactStatics(WithLocale, BaseComponent, ['defaultProps']);\n\n    if (process.env.RUN_ENV === 'test') {\n      return setDisplayName(wrapDisplayName(BaseComponent, '__test__'))(WithLocale);\n    }\n\n    return setDisplayName(wrapDisplayName(BaseComponent, 'withLocale'))(WithLocale);\n  };\n}\n\nexport default withLocale;","map":null,"metadata":{},"sourceType":"module"}