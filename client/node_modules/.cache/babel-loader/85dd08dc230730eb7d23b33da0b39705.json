{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport format from \"date-fns/format\";\nimport getDate from \"date-fns/get_date\";\nimport isAfter from \"date-fns/is_after\";\nimport isBefore from \"date-fns/is_before\";\nimport isSameDay from \"date-fns/is_same_day\";\nimport addDays from \"date-fns/add_days\";\nimport { getUnhandledProps, prefix, defaultProps } from '../../utils';\nimport IntlContext from '../../IntlProvider/IntlContext';\nimport { DATERANGE_DISABLED_TARGET } from '../../constants';\n\nvar TableRow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(TableRow, _React$Component);\n\n  function TableRow() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.addPrefix = function (name) {\n      return prefix(_this.props.classPrefix)(name);\n    };\n\n    return _this;\n  }\n\n  var _proto = TableRow.prototype;\n\n  _proto.renderDays = function renderDays() {\n    var _this$props = this.props,\n        weekendDate = _this$props.weekendDate,\n        disabledDate = _this$props.disabledDate,\n        inSameMonth = _this$props.inSameMonth,\n        selected = _this$props.selected,\n        hoverValue = _this$props.hoverValue,\n        onMouseMove = _this$props.onMouseMove,\n        onSelect = _this$props.onSelect;\n\n    var _ref = this.context || {},\n        formatDate = _ref.formatDate,\n        formattedDayPattern = _ref.formattedDayPattern,\n        today = _ref.today;\n\n    var formatStr = formattedDayPattern || 'YYYY-MM-DD';\n    var days = [];\n    var selectedStartDate = selected[0];\n    var selectedEndDate = selected[1];\n    var hoverStartDate = hoverValue[0] || null;\n    var hoverEndDate = hoverValue[1] || null;\n\n    for (var i = 0; i < 7; i += 1) {\n      var _classNames;\n\n      var thisDate = addDays(weekendDate, i);\n      var _selectValue = [selectedStartDate, selectedEndDate];\n      var disabled = disabledDate === null || disabledDate === void 0 ? void 0 : disabledDate(thisDate, _selectValue, DATERANGE_DISABLED_TARGET.CALENDAR);\n      var isToday = isSameDay(thisDate, new Date());\n      var unSameMonth = !(inSameMonth === null || inSameMonth === void 0 ? void 0 : inSameMonth(thisDate));\n      var isStartSelected = !unSameMonth && selectedStartDate && isSameDay(thisDate, selectedStartDate);\n      var isEndSelected = !unSameMonth && selectedEndDate && isSameDay(thisDate, selectedEndDate);\n      var isSelected = isStartSelected || isEndSelected;\n      var inRange = false; // for Selected\n\n      if (selectedStartDate && selectedEndDate) {\n        if (isBefore(thisDate, selectedEndDate) && isAfter(thisDate, selectedStartDate)) {\n          inRange = true;\n        }\n\n        if (isBefore(thisDate, selectedStartDate) && isAfter(thisDate, selectedEndDate)) {\n          inRange = true;\n        }\n      } // for Hovering\n\n\n      if (!isSelected && hoverEndDate && hoverStartDate) {\n        if (!isAfter(thisDate, hoverEndDate) && !isBefore(thisDate, hoverStartDate)) {\n          inRange = true;\n        }\n\n        if (!isAfter(thisDate, hoverStartDate) && !isBefore(thisDate, hoverEndDate)) {\n          inRange = true;\n        }\n      }\n\n      var classes = classNames(this.addPrefix('cell'), (_classNames = {}, _classNames[this.addPrefix('cell-un-same-month')] = unSameMonth, _classNames[this.addPrefix('cell-is-today')] = isToday, _classNames[this.addPrefix('cell-selected-start')] = isStartSelected, _classNames[this.addPrefix('cell-selected-end')] = isEndSelected, _classNames[this.addPrefix('cell-selected')] = isSelected, _classNames[this.addPrefix('cell-in-range')] = !unSameMonth && inRange, _classNames[this.addPrefix('cell-disabled')] = disabled, _classNames));\n      var title = formatDate ? formatDate(thisDate, formatStr) : format(thisDate, formatStr);\n      days.push(React.createElement(\"div\", {\n        key: title,\n        className: classes,\n        role: \"menu\",\n        tabIndex: -1,\n        title: isToday ? title + \" (\" + today + \")\" : title,\n        onMouseEnter: !disabled && onMouseMove ? onMouseMove.bind(null, thisDate) : undefined,\n        onClick: !disabled ? onSelect === null || onSelect === void 0 ? void 0 : onSelect.bind(null, thisDate) : undefined\n      }, React.createElement(\"span\", {\n        className: this.addPrefix('cell-content')\n      }, getDate(thisDate))));\n    }\n\n    return days;\n  };\n\n  _proto.renderWeekNumber = function renderWeekNumber() {\n    return React.createElement(\"div\", {\n      className: this.addPrefix('cell-week-number')\n    }, format(this.props.weekendDate, 'W'));\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        className = _this$props2.className,\n        showWeekNumbers = _this$props2.showWeekNumbers,\n        rest = _objectWithoutPropertiesLoose(_this$props2, [\"className\", \"showWeekNumbers\"]);\n\n    var classes = classNames(this.addPrefix('row'), className);\n    var unhandled = getUnhandledProps(TableRow, rest);\n    return React.createElement(\"div\", _extends({}, unhandled, {\n      className: classes\n    }), showWeekNumbers && this.renderWeekNumber(), this.renderDays());\n  };\n\n  return TableRow;\n}(React.Component);\n\nTableRow.contextType = IntlContext;\nTableRow.propTypes = {\n  weekendDate: PropTypes.instanceOf(Date),\n  selected: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n  hoverValue: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  onSelect: PropTypes.func,\n  disabledDate: PropTypes.func,\n  inSameMonth: PropTypes.func,\n  onMouseMove: PropTypes.func\n};\nTableRow.defaultProps = {\n  selected: [],\n  hoverValue: []\n};\nvar enhance = defaultProps({\n  classPrefix: 'calendar-table'\n});\nexport default enhance(TableRow);","map":null,"metadata":{},"sourceType":"module"}