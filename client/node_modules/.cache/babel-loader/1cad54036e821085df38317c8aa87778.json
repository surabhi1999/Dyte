{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Icon from '../Icon';\nimport { STATUS_ICON_NAMES, STATUS } from '../constants';\nimport { prefix, defaultProps } from '../utils';\n\nvar Message =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Message, _React$Component);\n\n  function Message(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _this.addPrefix = function (name) {\n      return prefix(_this.props.classPrefix)(name);\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        display: 'hiding'\n      });\n\n      setTimeout(function () {\n        return _this.setState({\n          display: 'hide'\n        }, function () {\n          var _this$props$onClose, _this$props;\n\n          (_this$props$onClose = (_this$props = _this.props).onClose) === null || _this$props$onClose === void 0 ? void 0 : _this$props$onClose.call(_this$props);\n        });\n      }, 1000);\n    };\n\n    _this.state = {\n      display: 'show'\n    };\n    return _this;\n  }\n\n  var _proto = Message.prototype;\n\n  _proto.renderCloseButton = function renderCloseButton(closeLabel) {\n    return React.createElement(\"button\", {\n      type: \"button\",\n      className: this.addPrefix('btn-close'),\n      onClick: this.handleClose\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, \"\\xD7\"), React.createElement(\"span\", {\n      className: \"sr-only\"\n    }, closeLabel));\n  };\n\n  _proto.render = function render() {\n    var _classNames;\n\n    var _this$props2 = this.props,\n        className = _this$props2.className,\n        classPrefix = _this$props2.classPrefix,\n        type = _this$props2.type,\n        title = _this$props2.title,\n        description = _this$props2.description,\n        closeLabel = _this$props2.closeLabel,\n        closable = _this$props2.closable,\n        full = _this$props2.full,\n        showIcon = _this$props2.showIcon,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"className\", \"classPrefix\", \"type\", \"title\", \"description\", \"closeLabel\", \"closable\", \"full\", \"showIcon\"]);\n\n    var display = this.state.display;\n\n    if (display === 'hide') {\n      return null;\n    }\n\n    var hasTitle = !!title;\n    var hasDesc = !!description;\n    var classes = classNames(classPrefix, className, this.addPrefix(type), this.addPrefix(display), (_classNames = {}, _classNames[this.addPrefix('has-title')] = hasTitle, _classNames[this.addPrefix('has-icon')] = showIcon, _classNames[this.addPrefix('full')] = full, _classNames));\n    return React.createElement(\"div\", _extends({}, props, {\n      className: classes\n    }), React.createElement(\"div\", {\n      className: this.addPrefix('container')\n    }, closable && this.renderCloseButton(closeLabel), showIcon && React.createElement(\"div\", {\n      className: this.addPrefix('icon-wrapper')\n    }, React.createElement(Icon, {\n      icon: STATUS_ICON_NAMES[type]\n    })), React.createElement(\"div\", {\n      className: this.addPrefix('content')\n    }, hasTitle && React.createElement(\"h5\", {\n      className: this.addPrefix('header')\n    }, title), hasDesc && React.createElement(\"div\", {\n      className: this.addPrefix('body')\n    }, description))));\n  };\n\n  return Message;\n}(React.Component);\n\nMessage.propTypes = {\n  type: PropTypes.oneOf(STATUS),\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  closable: PropTypes.bool,\n  closeLabel: PropTypes.string,\n  title: PropTypes.node,\n  description: PropTypes.node,\n  showIcon: PropTypes.bool,\n  full: PropTypes.bool,\n  classPrefix: PropTypes.string\n};\nMessage.defaultProps = {\n  type: 'info',\n  closeLabel: 'Close'\n};\nexport default defaultProps({\n  classPrefix: 'message'\n})(Message);","map":null,"metadata":{},"sourceType":"module"}