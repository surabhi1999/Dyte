{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { prefix, getUnhandledProps, defaultProps } from '../utils';\nimport Checkbox from '../Checkbox';\nimport classNames from 'classnames';\n\nvar DropdownMenuCheckItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(DropdownMenuCheckItem, _React$Component);\n\n  function DropdownMenuCheckItem() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handleChange = function (value, checked, event) {\n      var _this$props$onSelect, _this$props;\n\n      (_this$props$onSelect = (_this$props = _this.props).onSelect) === null || _this$props$onSelect === void 0 ? void 0 : _this$props$onSelect.call(_this$props, value, event, checked);\n    };\n\n    _this.handleCheck = function (event) {\n      var _this$props2 = _this.props,\n          value = _this$props2.value,\n          disabled = _this$props2.disabled,\n          onCheck = _this$props2.onCheck,\n          active = _this$props2.active;\n\n      if (!disabled) {\n        onCheck === null || onCheck === void 0 ? void 0 : onCheck(value, event, !active);\n      }\n    };\n\n    _this.handleSelectItem = function (event) {\n      var _this$props3 = _this.props,\n          value = _this$props3.value,\n          disabled = _this$props3.disabled,\n          onSelectItem = _this$props3.onSelectItem,\n          active = _this$props3.active;\n\n      if (!disabled) {\n        onSelectItem === null || onSelectItem === void 0 ? void 0 : onSelectItem(value, event, !active);\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = DropdownMenuCheckItem.prototype;\n\n  _proto.render = function render() {\n    var _classNames;\n\n    var _this$props4 = this.props,\n        value = _this$props4.value,\n        active = _this$props4.active,\n        onKeyDown = _this$props4.onKeyDown,\n        disabled = _this$props4.disabled,\n        focus = _this$props4.focus,\n        children = _this$props4.children,\n        className = _this$props4.className,\n        classPrefix = _this$props4.classPrefix,\n        checkable = _this$props4.checkable,\n        indeterminate = _this$props4.indeterminate,\n        Component = _this$props4.componentClass,\n        CheckboxItem = _this$props4.checkboxComponentClass,\n        rest = _objectWithoutPropertiesLoose(_this$props4, [\"value\", \"active\", \"onKeyDown\", \"disabled\", \"focus\", \"children\", \"className\", \"classPrefix\", \"checkable\", \"indeterminate\", \"componentClass\", \"checkboxComponentClass\"]);\n\n    var addPrefix = prefix(classPrefix);\n    var unhandled = getUnhandledProps(DropdownMenuCheckItem, rest);\n    var checkboxItemClasses = classNames(classPrefix, (_classNames = {}, _classNames[addPrefix('focus')] = focus, _classNames));\n    return React.createElement(Component, _extends({}, unhandled, {\n      className: className,\n      role: \"menuitem\",\n      tabIndex: -1\n    }), React.createElement(CheckboxItem, {\n      value: value,\n      role: \"presentation\",\n      disabled: disabled,\n      checked: active,\n      checkable: checkable,\n      indeterminate: indeterminate,\n      className: checkboxItemClasses,\n      onKeyDown: disabled ? null : onKeyDown,\n      onChange: this.handleChange,\n      onClick: this.handleSelectItem,\n      onCheckboxClick: this.handleCheck\n    }, children));\n  };\n\n  return DropdownMenuCheckItem;\n}(React.Component);\n\nDropdownMenuCheckItem.propTypes = {\n  classPrefix: PropTypes.string,\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  checkable: PropTypes.bool,\n  indeterminate: PropTypes.bool,\n  value: PropTypes.any,\n  onSelect: PropTypes.func,\n  onCheck: PropTypes.func,\n  onSelectItem: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  focus: PropTypes.bool,\n  title: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  getItemData: PropTypes.func,\n  componentClass: PropTypes.elementType,\n  checkboxComponentClass: PropTypes.elementType\n};\nDropdownMenuCheckItem.defaultProps = {\n  checkable: true,\n  componentClass: 'div',\n  checkboxComponentClass: Checkbox\n};\nexport default defaultProps({\n  classPrefix: 'check-item'\n})(DropdownMenuCheckItem);","map":null,"metadata":{},"sourceType":"module"}