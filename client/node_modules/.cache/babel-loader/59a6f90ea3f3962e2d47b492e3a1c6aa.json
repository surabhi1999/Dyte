{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { prefix, defaultProps } from '../utils';\n\nvar StepItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(StepItem, _React$Component);\n\n  function StepItem() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = StepItem.prototype;\n\n  _proto.render = function render() {\n    var _classNames;\n\n    var _this$props = this.props,\n        className = _this$props.className,\n        classPrefix = _this$props.classPrefix,\n        style = _this$props.style,\n        itemWidth = _this$props.itemWidth,\n        status = _this$props.status,\n        icon = _this$props.icon,\n        stepNumber = _this$props.stepNumber,\n        description = _this$props.description,\n        title = _this$props.title,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"classPrefix\", \"style\", \"itemWidth\", \"status\", \"icon\", \"stepNumber\", \"description\", \"title\"]);\n\n    var addPrefix = prefix(classPrefix);\n    var classes = classNames(className, classPrefix, (_classNames = {}, _classNames[addPrefix(\"status-\" + status)] = status, _classNames[addPrefix('custom')] = icon, _classNames));\n\n    var styles = _extends({\n      width: itemWidth\n    }, style);\n\n    var contentNode = React.createElement(\"div\", {\n      className: addPrefix('content')\n    }, React.createElement(\"div\", {\n      className: addPrefix('title')\n    }, title), description && React.createElement(\"div\", {\n      className: addPrefix('description')\n    }, description));\n    var iconNode = React.createElement(\"span\", {\n      className: addPrefix(['icon', \"icon-\" + status])\n    }, stepNumber);\n\n    if (icon) {\n      iconNode = React.createElement(\"span\", {\n        className: addPrefix('icon')\n      }, icon);\n    }\n\n    return React.createElement(\"div\", _extends({}, rest, {\n      className: classes,\n      style: styles\n    }), React.createElement(\"div\", {\n      className: addPrefix('tail')\n    }), React.createElement(\"div\", {\n      className: addPrefix(['icon-wrapper', icon ? 'custom-icon' : ''])\n    }, iconNode), contentNode);\n  };\n\n  return StepItem;\n}(React.Component);\n\nStepItem.propTypes = {\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  style: PropTypes.object,\n  itemWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  status: PropTypes.oneOf(['finish', 'wait', 'process', 'error']),\n  icon: PropTypes.object,\n  stepNumber: PropTypes.number,\n  description: PropTypes.node,\n  title: PropTypes.node\n};\nexport default defaultProps({\n  classPrefix: 'steps-item'\n})(StepItem);","map":null,"metadata":{},"sourceType":"module"}