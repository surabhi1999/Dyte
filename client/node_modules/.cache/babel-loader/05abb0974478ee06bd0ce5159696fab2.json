{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _pick from \"lodash/pick\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport MonthDropdown from './MonthDropdown';\nimport TimeDropdown from './TimeDropdown';\nimport View from './View';\nimport Header from './Header';\nimport { getUnhandledProps, defaultProps, prefix, refType } from '../utils';\nimport { disabledTime, calendarOnlyProps } from '../utils/timeUtils';\nimport { shouldTime, shouldDate, shouldMonth } from '../utils/formatUtils';\nimport addMonths from \"date-fns/add_months\";\nimport { tuple } from '../@types/utils';\nvar CalendarState = tuple('DROP_TIME', 'DROP_MONTH');\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Calendar, _React$Component);\n\n  function Calendar() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.disabledDate = function (date) {\n      var _this$props$disabledD, _this$props;\n\n      if ((_this$props$disabledD = (_this$props = _this.props).disabledDate) === null || _this$props$disabledD === void 0 ? void 0 : _this$props$disabledD.call(_this$props, date)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _this.disabledTime = function (date) {\n      return disabledTime(_this.props, date);\n    };\n\n    _this.handleMoveForword = function () {\n      var _this$props2 = _this.props,\n          onMoveForword = _this$props2.onMoveForword,\n          pageDate = _this$props2.pageDate;\n      onMoveForword === null || onMoveForword === void 0 ? void 0 : onMoveForword(addMonths(pageDate, 1));\n    };\n\n    _this.handleMoveBackward = function () {\n      var _this$props3 = _this.props,\n          onMoveBackward = _this$props3.onMoveBackward,\n          pageDate = _this$props3.pageDate;\n      onMoveBackward === null || onMoveBackward === void 0 ? void 0 : onMoveBackward(addMonths(pageDate, -1));\n    };\n\n    return _this;\n  }\n\n  var _proto = Calendar.prototype;\n\n  _proto.render = function render() {\n    var _classNames;\n\n    var _this$props4 = this.props,\n        calendarState = _this$props4.calendarState,\n        pageDate = _this$props4.pageDate,\n        onSelect = _this$props4.onSelect,\n        onToggleMonthDropdown = _this$props4.onToggleMonthDropdown,\n        onToggleTimeDropdown = _this$props4.onToggleTimeDropdown,\n        onChangePageDate = _this$props4.onChangePageDate,\n        onChangePageTime = _this$props4.onChangePageTime,\n        onToggleMeridian = _this$props4.onToggleMeridian,\n        format = _this$props4.format,\n        calendarRef = _this$props4.calendarRef,\n        className = _this$props4.className,\n        isoWeek = _this$props4.isoWeek,\n        limitEndYear = _this$props4.limitEndYear,\n        classPrefix = _this$props4.classPrefix,\n        renderTitle = _this$props4.renderTitle,\n        renderToolbar = _this$props4.renderToolbar,\n        renderCell = _this$props4.renderCell,\n        showWeekNumbers = _this$props4.showWeekNumbers,\n        showMeridian = _this$props4.showMeridian,\n        rest = _objectWithoutPropertiesLoose(_this$props4, [\"calendarState\", \"pageDate\", \"onSelect\", \"onToggleMonthDropdown\", \"onToggleTimeDropdown\", \"onChangePageDate\", \"onChangePageTime\", \"onToggleMeridian\", \"format\", \"calendarRef\", \"className\", \"isoWeek\", \"limitEndYear\", \"classPrefix\", \"renderTitle\", \"renderToolbar\", \"renderCell\", \"showWeekNumbers\", \"showMeridian\"]);\n\n    var showDate = shouldDate(format);\n    var showTime = shouldTime(format);\n    var showMonth = shouldMonth(format);\n    var onlyShowTime = showTime && !showDate && !showMonth;\n    var onlyShowMonth = showMonth && !showDate && !showTime;\n    var dropTime = calendarState === 'DROP_TIME' || onlyShowTime;\n    var dropMonth = calendarState === 'DROP_MONTH' || onlyShowMonth;\n    var addPrefix = prefix(classPrefix);\n    var calendarClasses = classNames(className, classPrefix, (_classNames = {}, _classNames[addPrefix('show-time-dropdown')] = dropTime, _classNames[addPrefix('show-month-dropdown')] = dropMonth, _classNames));\n    var unhandled = getUnhandledProps(Calendar, rest);\n\n    var timeDropdownProps = _pick(rest, calendarOnlyProps);\n\n    return React.createElement(\"div\", _extends({}, unhandled, {\n      className: calendarClasses,\n      ref: calendarRef\n    }), React.createElement(Header, {\n      date: pageDate,\n      format: format,\n      showMonth: showMonth,\n      showDate: showDate,\n      showTime: showTime,\n      showMeridian: showMeridian,\n      disabledDate: this.disabledDate,\n      disabledTime: this.disabledTime,\n      onMoveForword: this.handleMoveForword,\n      onMoveBackward: this.handleMoveBackward,\n      onToggleMonthDropdown: onToggleMonthDropdown,\n      onToggleTimeDropdown: onToggleTimeDropdown,\n      onToggleMeridian: onToggleMeridian,\n      renderTitle: renderTitle,\n      renderToolbar: renderToolbar\n    }), showDate && React.createElement(View, {\n      key: \"MonthView\",\n      activeDate: pageDate,\n      onSelect: onSelect,\n      isoWeek: isoWeek,\n      disabledDate: this.disabledDate,\n      renderCell: renderCell,\n      showWeekNumbers: showWeekNumbers\n    }), showMonth && React.createElement(MonthDropdown, {\n      date: pageDate,\n      onSelect: onChangePageDate,\n      show: dropMonth,\n      limitEndYear: limitEndYear,\n      disabledMonth: this.disabledDate\n    }), showTime && React.createElement(TimeDropdown, _extends({}, timeDropdownProps, {\n      date: pageDate,\n      format: format,\n      show: dropTime,\n      showMeridian: showMeridian,\n      onSelect: onChangePageTime\n    })));\n  };\n\n  return Calendar;\n}(React.Component);\n\nCalendar.propTypes = {\n  pageDate: PropTypes.instanceOf(Date),\n  calendarState: PropTypes.oneOf(CalendarState),\n  calendarRef: refType,\n  format: PropTypes.string,\n  isoWeek: PropTypes.bool,\n  limitEndYear: PropTypes.number,\n  className: PropTypes.string,\n  showWeekNumbers: PropTypes.bool,\n  showMeridian: PropTypes.bool,\n  classPrefix: PropTypes.string,\n  disabledDate: PropTypes.func,\n  disabledHours: PropTypes.func,\n  disabledMinutes: PropTypes.func,\n  disabledSeconds: PropTypes.func,\n  hideHours: PropTypes.func,\n  hideMinutes: PropTypes.func,\n  hideSeconds: PropTypes.func,\n  onMoveForword: PropTypes.func,\n  onMoveBackward: PropTypes.func,\n  onSelect: PropTypes.func,\n  onToggleMonthDropdown: PropTypes.func,\n  onToggleTimeDropdown: PropTypes.func,\n  onChangePageDate: PropTypes.func,\n  onChangePageTime: PropTypes.func,\n  onToggleMeridian: PropTypes.func,\n  renderTitle: PropTypes.func,\n  renderToolbar: PropTypes.func,\n  renderCell: PropTypes.func\n};\nexport default defaultProps({\n  classPrefix: 'calendar'\n})(Calendar);","map":null,"metadata":{},"sourceType":"module"}