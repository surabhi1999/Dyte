{"ast":null,"code":"import _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { getContainer, ownerDocument } from 'dom-lib';\n\nvar Portal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Portal, _React$Component);\n\n  function Portal() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.portalContainerNode = null;\n\n    _this.setContainer = function (props) {\n      if (props === void 0) {\n        props = _this.props;\n      }\n\n      _this.portalContainerNode = getContainer(props.container, ownerDocument(_assertThisInitialized(_this)).body);\n    };\n\n    _this.getMountNode = function () {\n      return _this.portalContainerNode;\n    };\n\n    return _this;\n  }\n\n  var _proto = Portal.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.setContainer();\n    this.forceUpdate(this.props.onRendered);\n  };\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    if (nextProps.container !== this.props.container) {\n      this.setContainer();\n    }\n\n    if (nextProps != this.props) {\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.portalContainerNode = null;\n  };\n\n  _proto.render = function render() {\n    var children = this.props.children;\n    return children && this.portalContainerNode ? ReactDOM.createPortal(children, this.portalContainerNode) : null;\n  };\n\n  return Portal;\n}(React.Component);\n\nPortal.displayName = 'Portal';\nexport default Portal;","map":null,"metadata":{},"sourceType":"module"}