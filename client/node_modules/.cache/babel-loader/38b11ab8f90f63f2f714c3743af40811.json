{"ast":null,"code":"import * as React from 'react';\nimport reactToString from '../utils/reactToString';\n\nvar SelectedElement = function SelectedElement(props) {\n  var selectedItems = props.selectedItems,\n      prefix = props.prefix,\n      valueKey = props.valueKey,\n      labelKey = props.labelKey,\n      childrenKey = props.childrenKey,\n      countable = props.countable,\n      cascade = props.cascade,\n      locale = props.locale;\n  var count = selectedItems.length;\n  var title = '';\n\n  if (count) {\n    title = selectedItems.map(function (item) {\n      var label = item[labelKey];\n\n      if (typeof label === 'string' || typeof label === 'number') {\n        return label;\n      } else if (React.isValidElement(label)) {\n        return reactToString(label).join('');\n      }\n\n      return '';\n    }).join(', ');\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: prefix('value-list'),\n    title: title\n  }, selectedItems.map(function (item, index) {\n    var checkAll = cascade && (item.checkAll || item[childrenKey]);\n    return React.createElement(React.Fragment, {\n      key: item[valueKey]\n    }, React.createElement(\"span\", {\n      className: prefix('value-item')\n    }, item[labelKey], checkAll ? \" (\" + locale.checkAll + \")\" : ''), index === count - 1 ? null : React.createElement(\"span\", {\n      className: prefix('value-separator')\n    }, \",\"));\n  })), countable ? React.createElement(\"span\", {\n    className: prefix('value-count'),\n    title: \"\" + count\n  }, count > 99 ? '99+' : count) : null);\n};\n\nexport default SelectedElement;","map":null,"metadata":{},"sourceType":"module"}