{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ColumnResizeHandler from './ColumnResizeHandler';\nimport { isNullOrUndefined, getUnhandledProps, defaultClassPrefix, prefix } from './utils';\nimport Cell from './Cell';\nvar propTypes = {\n  index: PropTypes.number,\n  sortColumn: PropTypes.string,\n  sortType: PropTypes.oneOf(['desc', 'asc']),\n  sortable: PropTypes.bool,\n  resizable: PropTypes.bool,\n  onColumnResizeStart: PropTypes.func,\n  onColumnResizeEnd: PropTypes.func,\n  onResize: PropTypes.func,\n  onColumnResizeMove: PropTypes.func,\n  onSortColumn: PropTypes.func,\n  flexGrow: PropTypes.number,\n  fixed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right'])]),\n  children: PropTypes.node\n};\n\nvar HeaderCell =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inheritsLoose(HeaderCell, _React$PureComponent);\n\n  HeaderCell.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.width !== prevState.width || nextProps.flexGrow !== prevState.flexGrow) {\n      return {\n        width: nextProps.width,\n        flexGrow: nextProps.flexGrow,\n        columnWidth: isNullOrUndefined(nextProps.flexGrow) ? nextProps.width : 0\n      };\n    }\n\n    return null;\n  };\n\n  function HeaderCell(props) {\n    var _this;\n\n    _this = _React$PureComponent.call(this, props) || this;\n\n    _this.handleColumnResizeStart = function () {\n      var _this$props = _this.props,\n          left = _this$props.left,\n          fixed = _this$props.fixed,\n          onColumnResizeStart = _this$props.onColumnResizeStart;\n      onColumnResizeStart === null || onColumnResizeStart === void 0 ? void 0 : onColumnResizeStart(_this.state.columnWidth, left, !!fixed);\n    };\n\n    _this.handleColumnResizeEnd = function (columnWidth, cursorDelta) {\n      var _this$props2 = _this.props,\n          dataKey = _this$props2.dataKey,\n          index = _this$props2.index,\n          onColumnResizeEnd = _this$props2.onColumnResizeEnd,\n          onResize = _this$props2.onResize;\n\n      _this.setState({\n        columnWidth: columnWidth\n      });\n\n      onColumnResizeEnd === null || onColumnResizeEnd === void 0 ? void 0 : onColumnResizeEnd(columnWidth, cursorDelta, dataKey, index);\n      onResize === null || onResize === void 0 ? void 0 : onResize(columnWidth, dataKey);\n    };\n\n    _this.handleClick = function () {\n      if (_this.props.sortable) {\n        var _this$props$onSortCol, _this$props3;\n\n        (_this$props$onSortCol = (_this$props3 = _this.props).onSortColumn) === null || _this$props$onSortCol === void 0 ? void 0 : _this$props$onSortCol.call(_this$props3, _this.props.dataKey);\n      }\n    };\n\n    _this.addPrefix = function (name) {\n      return prefix(_this.props.classPrefix)(name);\n    };\n\n    _this.state = {\n      width: props.width,\n      flexGrow: props.flexGrow,\n      columnWidth: isNullOrUndefined(props.flexGrow) ? props.width : 0\n    };\n    return _this;\n  }\n\n  var _proto = HeaderCell.prototype;\n\n  _proto.renderResizeSpanner = function renderResizeSpanner() {\n    var _this$props4 = this.props,\n        resizable = _this$props4.resizable,\n        left = _this$props4.left,\n        onColumnResizeMove = _this$props4.onColumnResizeMove,\n        fixed = _this$props4.fixed,\n        headerHeight = _this$props4.headerHeight;\n    var columnWidth = this.state.columnWidth;\n\n    if (!resizable) {\n      return null;\n    }\n\n    return (\n      /*#__PURE__*/\n      React.createElement(ColumnResizeHandler, {\n        defaultColumnWidth: columnWidth,\n        key: columnWidth,\n        columnLeft: left,\n        columnFixed: fixed,\n        height: headerHeight ? headerHeight - 1 : undefined,\n        onColumnResizeMove: onColumnResizeMove,\n        onColumnResizeStart: this.handleColumnResizeStart,\n        onColumnResizeEnd: this.handleColumnResizeEnd\n      })\n    );\n  };\n\n  _proto.renderSortColumn = function renderSortColumn() {\n    var _this$props5 = this.props,\n        sortable = _this$props5.sortable,\n        sortColumn = _this$props5.sortColumn,\n        _this$props5$sortType = _this$props5.sortType,\n        sortType = _this$props5$sortType === void 0 ? '' : _this$props5$sortType,\n        dataKey = _this$props5.dataKey,\n        groupHeader = _this$props5.groupHeader;\n\n    if (sortable && !groupHeader) {\n      var _classNames;\n\n      var iconClasses = classNames(this.addPrefix('icon-sort'), (_classNames = {}, _classNames[this.addPrefix(\"icon-sort-\" + sortType)] = sortColumn === dataKey, _classNames));\n      return (\n        /*#__PURE__*/\n        React.createElement(\"span\", {\n          className: this.addPrefix('sort-wrapper')\n        },\n        /*#__PURE__*/\n        React.createElement(\"i\", {\n          className: iconClasses\n        }))\n      );\n    }\n\n    return null;\n  };\n\n  _proto.render = function render() {\n    var _classNames2;\n\n    var _this$props6 = this.props,\n        className = _this$props6.className,\n        width = _this$props6.width,\n        dataKey = _this$props6.dataKey,\n        headerHeight = _this$props6.headerHeight,\n        children = _this$props6.children,\n        left = _this$props6.left,\n        sortable = _this$props6.sortable,\n        classPrefix = _this$props6.classPrefix,\n        sortColumn = _this$props6.sortColumn,\n        sortType = _this$props6.sortType,\n        groupHeader = _this$props6.groupHeader,\n        rest = _objectWithoutPropertiesLoose(_this$props6, [\"className\", \"width\", \"dataKey\", \"headerHeight\", \"children\", \"left\", \"sortable\", \"classPrefix\", \"sortColumn\", \"sortType\", \"groupHeader\"]);\n\n    var classes = classNames(classPrefix, className, (_classNames2 = {}, _classNames2[this.addPrefix('sortable')] = sortable, _classNames2));\n    var unhandledProps = getUnhandledProps(propTypes, rest);\n    var ariaSort;\n\n    if (sortColumn === dataKey) {\n      ariaSort = 'other';\n\n      if (sortType === 'asc') {\n        ariaSort = 'ascending';\n      } else if (sortType === 'desc') {\n        ariaSort = 'descending';\n      }\n    }\n\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: classes\n      },\n      /*#__PURE__*/\n      React.createElement(Cell, _extends({\n        \"aria-sort\": ariaSort\n      }, unhandledProps, {\n        width: width,\n        dataKey: dataKey,\n        left: left,\n        headerHeight: headerHeight,\n        isHeaderCell: true,\n        onClick: !groupHeader ? this.handleClick : null\n      }), children, this.renderSortColumn()), this.renderResizeSpanner())\n    );\n  };\n\n  return HeaderCell;\n}(React.PureComponent);\n\nHeaderCell.propTypes = propTypes;\nHeaderCell.defaultProps = {\n  classPrefix: defaultClassPrefix('table-cell-header')\n};\nexport default HeaderCell;","map":null,"metadata":{},"sourceType":"module"}