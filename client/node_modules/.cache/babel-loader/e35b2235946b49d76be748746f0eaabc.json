{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport Portal from '../Portal';\nimport Position from './Position';\nimport RootCloseWrapper from './RootCloseWrapper';\n\nvar BaseOverlay =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(BaseOverlay, _React$Component);\n\n  function BaseOverlay(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _this.handleHidden = function (args) {\n      var _this$props$onExited, _this$props;\n\n      _this.setState({\n        exited: true\n      });\n\n      (_this$props$onExited = (_this$props = _this.props).onExited) === null || _this$props$onExited === void 0 ? void 0 : _this$props$onExited.call(_this$props, args);\n    };\n\n    _this.state = {\n      exited: !props.show\n    };\n    return _this;\n  }\n\n  BaseOverlay.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {\n    if (nextProps.show) {\n      return {\n        exited: false\n      };\n    } else if (!nextProps.transition) {\n      return {\n        exited: true\n      };\n    }\n\n    return null;\n  };\n\n  var _proto = BaseOverlay.prototype;\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        container = _this$props2.container,\n        containerPadding = _this$props2.containerPadding,\n        target = _this$props2.target,\n        placement = _this$props2.placement,\n        shouldUpdatePosition = _this$props2.shouldUpdatePosition,\n        rootClose = _this$props2.rootClose,\n        children = _this$props2.children,\n        Transition = _this$props2.transition,\n        show = _this$props2.show,\n        onHide = _this$props2.onHide,\n        positionRef = _this$props2.positionRef,\n        preventOverflow = _this$props2.preventOverflow,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"container\", \"containerPadding\", \"target\", \"placement\", \"shouldUpdatePosition\", \"rootClose\", \"children\", \"transition\", \"show\", \"onHide\", \"positionRef\", \"preventOverflow\"]);\n\n    var mountOverlay = show || Transition && !this.state.exited;\n\n    if (!mountOverlay) {\n      return null;\n    }\n\n    var child = children;\n    var positionProps = {\n      container: container,\n      containerPadding: containerPadding,\n      target: target,\n      placement: placement,\n      shouldUpdatePosition: shouldUpdatePosition,\n      preventOverflow: preventOverflow\n    };\n    child = React.createElement(Position, _extends({}, positionProps, {\n      ref: positionRef\n    }), child);\n\n    if (Transition) {\n      var onExit = props.onExit,\n          onExiting = props.onExiting,\n          onEnter = props.onEnter,\n          onEntering = props.onEntering,\n          onEntered = props.onEntered;\n      child = React.createElement(Transition, {\n        in: show,\n        transitionAppear: true,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: this.handleHidden,\n        onEnter: onEnter,\n        onEntering: onEntering,\n        onEntered: onEntered\n      }, child);\n    }\n\n    if (rootClose) {\n      child = React.createElement(RootCloseWrapper, {\n        target: target,\n        onRootClose: onHide\n      }, child);\n    }\n\n    return React.createElement(Portal, {\n      container: container\n    }, child);\n  };\n\n  return BaseOverlay;\n}(React.Component);\n\nexport default BaseOverlay;","map":null,"metadata":{},"sourceType":"module"}