{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _remove from \"lodash/remove\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport shallowEqual from '../utils/shallowEqual';\nimport { getUnhandledProps, defaultProps, prefix, createContext } from '../utils';\nexport var CheckboxContext = createContext({});\n\nvar CheckboxGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(CheckboxGroup, _React$Component);\n\n  function CheckboxGroup(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _this.getContextProps = function () {\n      var _this$props = _this.props,\n          inline = _this$props.inline,\n          name = _this$props.name,\n          value = _this$props.value;\n      return {\n        inline: inline,\n        name: name,\n        value: _this.getValue(),\n        controlled: !_isUndefined(value),\n        onChange: _this.handleChange\n      };\n    };\n\n    _this.handleChange = function (itemValue, itemChecked, event) {\n      var _this$props$onChange, _this$props2;\n\n      var nextValue = _cloneDeep(_this.getValue()) || [];\n\n      if (itemChecked) {\n        nextValue.push(itemValue);\n      } else {\n        _remove(nextValue, function (i) {\n          return shallowEqual(i, itemValue);\n        });\n      }\n\n      _this.setState({\n        value: nextValue\n      });\n\n      (_this$props$onChange = (_this$props2 = _this.props).onChange) === null || _this$props$onChange === void 0 ? void 0 : _this$props$onChange.call(_this$props2, nextValue, event);\n    };\n\n    _this.state = {\n      value: props.defaultValue || []\n    };\n    return _this;\n  }\n\n  var _proto = CheckboxGroup.prototype;\n\n  _proto.getValue = function getValue() {\n    var value = this.props.value;\n    return _isUndefined(value) ? this.state.value : value;\n  };\n\n  _proto.render = function render() {\n    var _classNames;\n\n    var _this$props3 = this.props,\n        className = _this$props3.className,\n        inline = _this$props3.inline,\n        children = _this$props3.children,\n        classPrefix = _this$props3.classPrefix,\n        props = _objectWithoutPropertiesLoose(_this$props3, [\"className\", \"inline\", \"children\", \"classPrefix\"]);\n\n    var addPrefix = prefix(classPrefix);\n    var classes = classNames(classPrefix, className, (_classNames = {}, _classNames[addPrefix('inline')] = inline, _classNames));\n    var unhandled = getUnhandledProps(CheckboxGroup, props);\n    return React.createElement(CheckboxContext.Provider, {\n      value: this.getContextProps()\n    }, React.createElement(\"div\", _extends({}, unhandled, {\n      role: \"group\",\n      className: classes\n    }), children));\n  };\n\n  return CheckboxGroup;\n}(React.Component);\n\nCheckboxGroup.propTypes = {\n  name: PropTypes.string,\n  className: PropTypes.string,\n  inline: PropTypes.bool,\n  value: PropTypes.array,\n  defaultValue: PropTypes.array,\n  onChange: PropTypes.func,\n  children: PropTypes.array,\n  classPrefix: PropTypes.string\n};\nexport default defaultProps({\n  classPrefix: 'checkbox-group'\n})(CheckboxGroup);","map":null,"metadata":{},"sourceType":"module"}