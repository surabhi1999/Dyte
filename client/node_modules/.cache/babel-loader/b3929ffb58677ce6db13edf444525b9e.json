{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _get from \"lodash/get\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getUnhandledProps, prefix, defaultProps, refType } from '../utils';\n\nvar InputSearch =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InputSearch, _React$Component);\n\n  function InputSearch() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handleChange = function (event) {\n      var _this$props$onChange, _this$props;\n\n      (_this$props$onChange = (_this$props = _this.props).onChange) === null || _this$props$onChange === void 0 ? void 0 : _this$props$onChange.call(_this$props, _get(event, 'target.value'), event);\n    };\n\n    return _this;\n  }\n\n  var _proto = InputSearch.prototype;\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        value = _this$props2.value,\n        Component = _this$props2.componentClass,\n        children = _this$props2.children,\n        className = _this$props2.className,\n        classPrefix = _this$props2.classPrefix,\n        inputRef = _this$props2.inputRef,\n        style = _this$props2.style,\n        rest = _objectWithoutPropertiesLoose(_this$props2, [\"value\", \"componentClass\", \"children\", \"className\", \"classPrefix\", \"inputRef\", \"style\"]);\n\n    var addPrefix = prefix(classPrefix);\n    var unhandled = getUnhandledProps(InputSearch, rest);\n    return React.createElement(\"div\", {\n      className: classNames(classPrefix, className),\n      style: style\n    }, React.createElement(Component, _extends({}, unhandled, {\n      ref: inputRef,\n      className: addPrefix('input'),\n      value: value,\n      onChange: this.handleChange\n    })), children);\n  };\n\n  return InputSearch;\n}(React.Component);\n\nInputSearch.propTypes = {\n  classPrefix: PropTypes.string,\n  value: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  style: PropTypes.object,\n  inputRef: refType,\n  componentClass: PropTypes.elementType,\n  onChange: PropTypes.func\n};\nvar enhance = defaultProps({\n  classPrefix: 'picker-search',\n  componentClass: 'input'\n});\nexport default enhance(InputSearch);","map":null,"metadata":{},"sourceType":"module"}