{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { setStatic } from 'recompose';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { defaultProps, prefix, getUnhandledProps } from '../utils';\n\nvar Breadcrumb =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Breadcrumb, _React$Component);\n\n  function Breadcrumb() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      ellipsis: true\n    };\n\n    _this.addPrefix = function (className) {\n      return prefix(_this.props.classPrefix)(className);\n    };\n\n    _this.handleClickEllipsis = function (event) {\n      var _this$props$onExpand, _this$props;\n\n      _this.setState({\n        ellipsis: false\n      });\n\n      (_this$props$onExpand = (_this$props = _this.props).onExpand) === null || _this$props$onExpand === void 0 ? void 0 : _this$props$onExpand.call(_this$props, event);\n    };\n\n    return _this;\n  }\n\n  var _proto = Breadcrumb.prototype;\n\n  _proto.getSeparatorNode = function getSeparatorNode(key) {\n    return React.createElement(\"li\", {\n      key: key,\n      className: this.addPrefix('separator')\n    }, this.props.separator);\n  };\n\n  _proto.getCollapseItems = function getCollapseItems(items, total) {\n    if (total > this.props.maxItems && total > 2 && this.state.ellipsis) {\n      return [items[0], items[1], [React.createElement(BreadcrumbItem, {\n        key: \"2\",\n        onClick: this.handleClickEllipsis\n      }, React.createElement(\"span\", null, \"...\"))], items[items.length - 2], items[items.length - 1]];\n    }\n\n    return items;\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props2 = this.props,\n        classPrefix = _this$props2.classPrefix,\n        Component = _this$props2.componentClass,\n        className = _this$props2.className,\n        children = _this$props2.children,\n        rest = _objectWithoutPropertiesLoose(_this$props2, [\"classPrefix\", \"componentClass\", \"className\", \"children\"]);\n\n    var unhandledProps = getUnhandledProps(Breadcrumb, rest);\n    var total = React.Children.count(children);\n    var items = [];\n\n    if (total) {\n      React.Children.forEach(children, function (item, index) {\n        items.push(item);\n\n        if (index < total - 1) {\n          items.push(_this2.getSeparatorNode(index));\n        }\n      });\n    }\n\n    return React.createElement(Component, _extends({}, unhandledProps, {\n      role: \"navigation\",\n      \"aria-label\": \"breadcrumbs\",\n      className: classNames(classPrefix, className)\n    }), this.getCollapseItems(items, total));\n  };\n\n  return Breadcrumb;\n}(React.Component);\n\nBreadcrumb.propTypes = {\n  separator: PropTypes.node,\n  componentClass: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  maxItems: PropTypes.number,\n  onExpand: PropTypes.func\n};\nBreadcrumb.defaultProps = {\n  separator: '/',\n  maxItems: 5\n};\nvar EnhancedBreadcrumb = defaultProps({\n  classPrefix: 'breadcrumb',\n  componentClass: 'ol'\n})(Breadcrumb);\nsetStatic('Item', BreadcrumbItem)(EnhancedBreadcrumb);\nexport default EnhancedBreadcrumb;","map":null,"metadata":{},"sourceType":"module"}