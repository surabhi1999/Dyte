{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { prefix, defaultProps, getUnhandledProps } from '../utils';\n\nvar ProgressLine =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ProgressLine, _React$Component);\n\n  function ProgressLine() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ProgressLine.prototype;\n\n  _proto.render = function render() {\n    var _lineInnerStyle, _percentStyle, _classNames;\n\n    var _this$props = this.props,\n        className = _this$props.className,\n        percent = _this$props.percent,\n        strokeColor = _this$props.strokeColor,\n        strokeWidth = _this$props.strokeWidth,\n        trailColor = _this$props.trailColor,\n        trailWidth = _this$props.trailWidth,\n        status = _this$props.status,\n        showInfo = _this$props.showInfo,\n        classPrefix = _this$props.classPrefix,\n        vertical = _this$props.vertical,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"percent\", \"strokeColor\", \"strokeWidth\", \"trailColor\", \"trailWidth\", \"status\", \"showInfo\", \"classPrefix\", \"vertical\"]);\n\n    var addPrefix = prefix(classPrefix);\n    var unhandled = getUnhandledProps(ProgressLine, rest);\n    var lineInnerStyle = (_lineInnerStyle = {\n      backgroundColor: trailColor\n    }, _lineInnerStyle[vertical ? 'width' : 'height'] = trailWidth || strokeWidth, _lineInnerStyle);\n    var percentStyle = (_percentStyle = {}, _percentStyle[vertical ? 'height' : 'width'] = percent + \"%\", _percentStyle.backgroundColor = strokeColor, _percentStyle[vertical ? 'width' : 'height'] = strokeWidth, _percentStyle);\n    var classes = classNames(classPrefix, addPrefix('line'), className, (_classNames = {}, _classNames[addPrefix('line-vertical')] = vertical, _classNames[addPrefix(\"line-\" + (status || ''))] = !!status, _classNames));\n    var showIcon = status && status !== 'active';\n    var info = showIcon ? React.createElement(\"span\", {\n      className: addPrefix(\"icon-\" + (status || ''))\n    }) : React.createElement(\"span\", {\n      className: addPrefix('info-status')\n    }, percent, \"%\");\n    return React.createElement(\"div\", _extends({\n      className: classes\n    }, unhandled), React.createElement(\"div\", {\n      className: addPrefix('line-outer')\n    }, React.createElement(\"div\", {\n      className: addPrefix('line-inner'),\n      style: lineInnerStyle\n    }, React.createElement(\"div\", {\n      className: addPrefix('line-bg'),\n      style: percentStyle\n    }))), showInfo ? React.createElement(\"div\", {\n      className: addPrefix('info')\n    }, info) : null);\n  };\n\n  return ProgressLine;\n}(React.Component);\n\nProgressLine.propTypes = {\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  percent: PropTypes.number,\n  strokeColor: PropTypes.string,\n  strokeWidth: PropTypes.number,\n  trailColor: PropTypes.string,\n  trailWidth: PropTypes.number,\n  showInfo: PropTypes.bool,\n  vertical: PropTypes.bool,\n  status: PropTypes.oneOf(['success', 'fail', 'active'])\n};\nProgressLine.defaultProps = {\n  showInfo: true,\n  percent: 0\n};\nexport default defaultProps({\n  classPrefix: 'progress'\n})(ProgressLine);","map":null,"metadata":{},"sourceType":"module"}