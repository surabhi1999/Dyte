{"ast":null,"code":"import * as React from 'react';\nimport isPlainObject from 'lodash/isPlainObject';\n\nfunction getTotalByColumns(columns) {\n  var totalFlexGrow = 0;\n  var totalWidth = 0;\n\n  var count = function count(items) {\n    Array.from(items).forEach(function (column) {\n      if (\n      /*#__PURE__*/\n      React.isValidElement(column)) {\n        var _column$props = column.props,\n            flexGrow = _column$props.flexGrow,\n            _column$props$width = _column$props.width,\n            width = _column$props$width === void 0 ? 0 : _column$props$width;\n        totalFlexGrow += flexGrow || 0;\n        totalWidth += flexGrow ? 0 : width;\n      } else if (Array.isArray(column)) {\n        count(column);\n      }\n    });\n  };\n\n  if (Array.isArray(columns)) {\n    count(columns);\n  } else if (isPlainObject(columns)) {\n    var _columns$props = columns.props,\n        flexGrow = _columns$props.flexGrow,\n        _columns$props$width = _columns$props.width,\n        width = _columns$props$width === void 0 ? 0 : _columns$props$width;\n    totalFlexGrow = flexGrow || 0;\n    totalWidth = flexGrow ? 0 : width;\n  }\n\n  return {\n    totalFlexGrow: totalFlexGrow,\n    totalWidth: totalWidth\n  };\n}\n\nexport default getTotalByColumns;","map":null,"metadata":{},"sourceType":"module"}